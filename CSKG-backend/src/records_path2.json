[
  {
    "n": {
"identity": 1027,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于精简数据"
      }
    }
  },
  {
    "n": {
"identity": 1028,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "借鉴软件规约"
      }
    }
  },
  {
    "n": {
"identity": 1029,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "机器学习局限"
      }
    }
  },
  {
    "n": {
"identity": 1030,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "需要大量训练样本"
      }
    }
  },
  {
    "n": {
"identity": 1031,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "难以适应环境变化"
      }
    }
  },
  {
    "n": {
"identity": 1032,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "黑箱模型"
      }
    }
  },
  {
    "n": {
"identity": 1033,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "难以避免数据泄露"
      }
    }
  },
  {
    "n": {
"identity": 1034,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "难以获得专家级结果"
      }
    }
  },
  {
    "n": {
"identity": 1035,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "文本情感分类"
      }
    }
  },
  {
    "n": {
"identity": 1036,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "根据文本内容来判断文本的相应类别"
      }
    }
  },
  {
    "n": {
"identity": 1037,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "文本分类"
      }
    }
  },
  {
    "n": {
"identity": 1038,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "词袋模型（Bag-of-Words，BoW）模型"
      }
    }
  },
  {
    "n": {
"identity": 1039,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "情感分类"
      }
    }
  },
  {
    "n": {
"identity": 1040,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "金融领域"
      }
    }
  },
  {
    "n": {
"identity": 1041,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "银行信贷识别"
      }
    }
  },
  {
    "n": {
"identity": 1042,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "股票价格预测"
      }
    }
  },
  {
    "n": {
"identity": 1043,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "网络领域"
      }
    }
  },
  {
    "n": {
"identity": 1044,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "垃圾邮件过滤"
      }
    }
  },
  {
    "n": {
"identity": 1045,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "医学领域"
      }
    }
  },
  {
    "n": {
"identity": 1046,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "心跳异位搏动识别"
      }
    }
  },
  {
    "n": {
"identity": 1047,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "语音识别领域"
      }
    }
  },
  {
    "n": {
"identity": 1048,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "语音识别多类分类"
      }
    }
  },
  {
    "n": {
"identity": 1049,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "计算机视觉领域"
      }
    }
  },
  {
    "n": {
"identity": 1050,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "动作识别"
      }
    }
  },
  {
    "n": {
"identity": 1051,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "交通标志识别"
      }
    }
  },
  {
    "n": {
"identity": 1052,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "辅助/无人驾驶"
      }
    }
  },
  {
    "n": {
"identity": 1053,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "字符领域"
      }
    }
  },
  {
    "n": {
"identity": 1054,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "手写体字符识别OCR"
      }
    }
  },
  {
    "n": {
"identity": 1055,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "无人驾驶领域"
      }
    }
  },
  {
    "n": {
"identity": 1056,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "特斯拉无人驾驶"
      }
    }
  },
  {
    "n": {
"identity": 1057,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "美国谷歌"
      }
    }
  },
  {
    "n": {
"identity": 1058,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "中国百度"
      }
    }
  },
  {
    "n": {
"identity": 1059,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "图像分类"
      }
    }
  },
  {
    "n": {
"identity": 1060,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "机器学习应用领域"
      }
    }
  },
  {
    "n": {
"identity": 1061,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "监督学习"
      }
    }
  },
  {
    "n": {
"identity": 1062,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "无监督学习"
      }
    }
  },
  {
    "n": {
"identity": 1063,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习"
      }
    }
  },
  {
    "n": {
"identity": 1064,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "进化学习"
      }
    }
  },
  {
    "n": {
"identity": 1065,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "发展历史"
      }
    }
  },
  {
    "n": {
"identity": 1066,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "源自AI"
      }
    }
  },
  {
    "n": {
"identity": 1067,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "推理期"
      }
    }
  },
  {
    "n": {
"identity": 1068,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "1956年夏天"
      }
    }
  },
  {
    "n": {
"identity": 1069,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "美国达特茅斯学院"
      }
    }
  },
  {
    "n": {
"identity": 1070,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "符号表示推理"
      }
    }
  },
  {
    "n": {
"identity": 1071,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "1965~1970"
      }
    }
  },
  {
    "n": {
"identity": 1072,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数学家真聪明"
      }
    }
  },
  {
    "n": {
"identity": 1073,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "知识期"
      }
    }
  },
  {
    "n": {
"identity": 1074,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "符号表示"
      }
    }
  },
  {
    "n": {
"identity": 1075,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "知识库"
      }
    }
  },
  {
    "n": {
"identity": 1076,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "专家系统"
      }
    }
  },
  {
    "n": {
"identity": 1077,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "1970~1980"
      }
    }
  },
  {
    "n": {
"identity": 1078,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "知识就是力量"
      }
    }
  },
  {
    "n": {
"identity": 1079,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "学习期"
      }
    }
  },
  {
    "n": {
"identity": 1080,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "学习技术"
      }
    }
  },
  {
    "n": {
"identity": 1081,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "1980~"
      }
    }
  },
  {
    "n": {
"identity": 1082,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "让系统自己学"
      }
    }
  },
  {
    "n": {
"identity": 1083,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "相关学科之间的关系"
      }
    }
  },
  {
    "n": {
"identity": 1084,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "数据库"
      }
    }
  },
  {
    "n": {
"identity": 1085,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "统计学"
      }
    }
  },
  {
    "n": {
"identity": 1086,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "深度学习"
      }
    }
  },
  {
    "n": {
"identity": 1087,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "神经网络"
      }
    }
  },
  {
    "n": {
"identity": 1088,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "人工智能"
      }
    }
  },
  {
    "n": {
"identity": 1089,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "机器学习"
      }
    }
  },
  {
    "n": {
"identity": 1090,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "模式识别"
      }
    }
  },
  {
    "n": {
"identity": 1091,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "知识发现"
      }
    }
  },
  {
    "n": {
"identity": 1092,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "数据挖掘"
      }
    }
  },
  {
    "n": {
"identity": 1093,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "模型评估与优化"
      }
    }
  },
  {
    "n": {
"identity": 1094,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "基本模型"
      }
    }
  },
  {
    "n": {
"identity": 1095,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "特征空间"
      }
    }
  },
  {
    "n": {
"identity": 1096,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "特征变量"
      }
    }
  },
  {
    "n": {
"identity": 1097,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "输出空间"
      }
    }
  },
  {
    "n": {
"identity": 1098,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "数据集合"
      }
    }
  },
  {
    "n": {
"identity": 1099,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "样本"
      }
    }
  },
  {
    "n": {
"identity": 1100,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "样例集合"
      }
    }
  },
  {
    "n": {
"identity": 1101,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "学习数据"
      }
    }
  },
  {
    "n": {
"identity": 1102,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "训练数据"
      }
    }
  },
  {
    "n": {
"identity": 1103,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "测试数据"
      }
    }
  },
  {
    "n": {
"identity": 1104,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "验证数据"
      }
    }
  },
  {
    "n": {
"identity": 1105,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "学习三要素"
      }
    }
  },
  {
    "n": {
"identity": 1106,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "模型"
      }
    }
  },
  {
    "n": {
"identity": 1107,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "策略-学习准则"
      }
    }
  },
  {
    "n": {
"identity": 1108,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "优化算法"
      }
    }
  },
  {
    "n": {
"identity": 1109,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "学习任务分类"
      }
    }
  },
  {
    "n": {
"identity": 1110,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "有监督学习"
      }
    }
  },
  {
    "n": {
"identity": 1111,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "分类"
      }
    }
  },
  {
    "n": {
"identity": 1112,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "回归"
      }
    }
  },
  {
    "n": {
"identity": 1113,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "无监督学习"
      }
    }
  },
  {
    "n": {
"identity": 1114,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "聚类"
      }
    }
  },
  {
    "n": {
"identity": 1115,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "强化学习"
      }
    }
  },
  {
    "n": {
"identity": 1116,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "假设空间"
      }
    }
  },
  {
    "n": {
"identity": 1117,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "性能评估"
      }
    }
  },
  {
    "n": {
"identity": 1118,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "评估方法"
      }
    }
  },
  {
    "n": {
"identity": 1119,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "留出法"
      }
    }
  },
  {
    "n": {
"identity": 1120,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "交叉验证法"
      }
    }
  },
  {
    "n": {
"identity": 1121,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "k-折交叉验证"
      }
    }
  },
  {
    "n": {
"identity": 1122,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "留一法"
      }
    }
  },
  {
    "n": {
"identity": 1123,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "自助法"
      }
    }
  },
  {
    "n": {
"identity": 1124,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "调参法"
      }
    }
  },
  {
    "n": {
"identity": 1125,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "调超参"
      }
    }
  },
  {
    "n": {
"identity": 1126,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "性能指标"
      }
    }
  },
  {
    "n": {
"identity": 1127,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "误差"
      }
    }
  },
  {
    "n": {
"identity": 1128,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "训练误差"
      }
    }
  },
  {
    "n": {
"identity": 1129,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "测试误差"
      }
    }
  },
  {
    "n": {
"identity": 1130,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "准确度/率"
      }
    }
  },
  {
    "n": {
"identity": 1131,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "精度"
      }
    }
  },
  {
    "n": {
"identity": 1132,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "召回率"
      }
    }
  },
  {
    "n": {
"identity": 1133,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "F值"
      }
    }
  },
  {
    "n": {
"identity": 1134,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "F1值"
      }
    }
  },
  {
    "n": {
"identity": 1135,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "混淆矩阵"
      }
    }
  },
  {
    "n": {
"identity": 1136,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "多分类性能指标"
      }
    }
  },
  {
    "n": {
"identity": 1137,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "宏查准率"
      }
    }
  },
  {
    "n": {
"identity": 1138,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "宏查全率"
      }
    }
  },
  {
    "n": {
"identity": 1139,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "宏F1"
      }
    }
  },
  {
    "n": {
"identity": 1140,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "微查准率"
      }
    }
  },
  {
    "n": {
"identity": 1141,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "微查全率"
      }
    }
  },
  {
    "n": {
"identity": 1142,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "微F1"
      }
    }
  },
  {
    "n": {
"identity": 1143,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "曲线度量"
      }
    }
  },
  {
    "n": {
"identity": 1144,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "PR曲线"
      }
    }
  },
  {
    "n": {
"identity": 1145,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "性能度量"
      }
    }
  },
  {
    "n": {
"identity": 1146,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "ROC和AUC"
      }
    }
  },
  {
    "n": {
"identity": 1147,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "ROC和P-R"
      }
    }
  },
  {
    "n": {
"identity": 1148,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "学习曲线"
      }
    }
  },
  {
    "n": {
"identity": 1149,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "计算开销"
      }
    }
  },
  {
    "n": {
"identity": 1150,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "回归模型评估"
      }
    }
  },
  {
    "n": {
"identity": 1151,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "聚类模型评估"
      }
    }
  },
  {
    "n": {
"identity": 1152,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Silhonette轮廓系数"
      }
    }
  },
  {
    "n": {
"identity": 1153,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "模型优化"
      }
    }
  },
  {
    "n": {
"identity": 1154,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "泛化能力/鲁棒性"
      }
    }
  },
  {
    "n": {
"identity": 1155,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "偏差"
      }
    }
  },
  {
    "n": {
"identity": 1156,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "方差"
      }
    }
  },
  {
    "n": {
"identity": 1157,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "欠拟合"
      }
    }
  },
  {
    "n": {
"identity": 1158,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "过拟合"
      }
    }
  },
  {
    "n": {
"identity": 1159,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "减少特征维度"
      }
    }
  },
  {
    "n": {
"identity": 1160,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "正则化"
      }
    }
  },
  {
    "n": {
"identity": 1161,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据增强"
      }
    }
  },
  {
    "n": {
"identity": 1162,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "参数范数惩罚"
      }
    }
  },
  {
    "n": {
"identity": 1163,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Dropout"
      }
    }
  },
  {
    "n": {
"identity": 1164,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "提前终止"
      }
    }
  },
  {
    "n": {
"identity": 1165,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "L1正则/范数"
      }
    }
  },
  {
    "n": {
"identity": 1166,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "L2正则"
      }
    }
  },
  {
    "n": {
"identity": 1167,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "线性模型"
      }
    }
  },
  {
    "n": {
"identity": 1168,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "线性回归模型"
      }
    }
  },
  {
    "n": {
"identity": 1169,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "一元线性回归"
      }
    }
  },
  {
    "n": {
"identity": 1170,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "f(x;w)=wx+b"
      }
    }
  },
  {
    "n": {
"identity": 1171,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "任务：求w和b"
      }
    }
  },
  {
    "n": {
"identity": 1172,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "最小二乘法"
      }
    }
  },
  {
    "n": {
"identity": 1173,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "最小化均方误差MSE"
      }
    }
  },
  {
    "n": {
"identity": 1174,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "计算每个样本预测值与真实值之间的误差并求和"
      }
    }
  },
  {
    "n": {
"identity": 1175,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "求偏导"
      }
    }
  },
  {
    "n": {
"identity": 1176,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "多元线性回归"
      }
    }
  },
  {
    "n": {
"identity": 1177,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "通过样本特征的线性组合来进行预测的模型．"
      }
    }
  },
  {
    "n": {
"identity": 1178,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "广义线性分类"
      }
    }
  },
  {
    "n": {
"identity": 1179,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "将线性回归的预测值做一个非线性的函数变化去逼近真实值"
      }
    }
  },
  {
    "n": {
"identity": 1180,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "联系函数（link function）"
      }
    }
  },
  {
    "n": {
"identity": 1181,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "将真实值的对数作为线性回归逼近的目标"
      }
    }
  },
  {
    "n": {
"identity": 1182,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "线性分类模型"
      }
    }
  },
  {
    "n": {
"identity": 1183,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "由一个（或多个）线性的判别函数f(x;w)和非线性的决策函数g()组成"
      }
    }
  },
  {
    "n": {
"identity": 1184,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "二分类问题"
      }
    }
  },
  {
    "n": {
"identity": 1185,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "超平面（Hyperplane）"
      }
    }
  },
  {
    "n": {
"identity": 1186,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "决策边界（Decision Boundary）"
      }
    }
  },
  {
    "n": {
"identity": 1187,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "决策平面（Decision Surface）"
      }
    }
  },
  {
    "n": {
"identity": 1188,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "多分类问题"
      }
    }
  },
  {
    "n": {
"identity": 1189,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "折分策略"
      }
    }
  },
  {
    "n": {
"identity": 1190,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "一对一拆分"
      }
    }
  },
  {
    "n": {
"identity": 1191,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "一对其余拆分"
      }
    }
  },
  {
    "n": {
"identity": 1192,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "argmax：一种改进的“一对其余”"
      }
    }
  },
  {
    "n": {
"identity": 1193,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Logistic回归"
      }
    }
  },
  {
    "n": {
"identity": 1194,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "将分类问题看作条件概率估计问题"
      }
    }
  },
  {
    "n": {
"identity": 1195,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "决策函数/激活函数"
      }
    }
  },
  {
    "n": {
"identity": 1196,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "单位阶跃函数"
      }
    }
  },
  {
    "n": {
"identity": 1197,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Sigmoid 函数"
      }
    }
  },
  {
    "n": {
"identity": 1198,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Logistic函数"
      }
    }
  },
  {
    "n": {
"identity": 1199,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Logistic Regression(LR)"
      }
    }
  },
  {
    "n": {
"identity": 1200,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "表达某种事件发生的可能性"
      }
    }
  },
  {
    "n": {
"identity": 1201,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Logistic回归优点"
      }
    }
  },
  {
    "n": {
"identity": 1202,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "实现简单"
      }
    }
  },
  {
    "n": {
"identity": 1203,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "分类时计算量非常小，速度很快，存储资源低;"
      }
    }
  },
  {
    "n": {
"identity": 1204,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "便利的观测样本概率分数;"
      }
    }
  },
  {
    "n": {
"identity": 1205,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Logistic回归缺点"
      }
    }
  },
  {
    "n": {
"identity": 1206,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "当特征空间很大时，逻辑回归的性能不是很好，容易欠拟合，一般准确度不太高;"
      }
    }
  },
  {
    "n": {
"identity": 1207,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "只能处理两分类问题，且必须线性可分;"
      }
    }
  },
  {
    "n": {
"identity": 1208,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "不能很好地处理大量多类特征或变量;"
      }
    }
  },
  {
    "n": {
"identity": 1209,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "对于非线性特征，需要进行转换。"
      }
    }
  },
  {
    "n": {
"identity": 1210,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Softmax回归"
      }
    }
  },
  {
    "n": {
"identity": 1211,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "也称为多项（Multinomial）或多类（Multi-Class）的Logistic 回归，是Logistic 回归在多分类问题上的推广"
      }
    }
  },
  {
    "n": {
"identity": 1212,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Softmax函数"
      }
    }
  },
  {
    "n": {
"identity": 1213,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Softmax 回归的决策函数"
      }
    }
  },
  {
    "n": {
"identity": 1214,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "学习准则：交叉熵"
      }
    }
  },
  {
    "n": {
"identity": 1215,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "优化：梯度下降"
      }
    }
  },
  {
    "n": {
"identity": 1216,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "交叉熵损失函数（Cross-Entropy Loss Function）"
      }
    }
  },
  {
    "n": {
"identity": 1217,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "负对数似然损失函数（Negative Log-Likelihood）"
      }
    }
  },
  {
    "n": {
"identity": 1218,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "真实概率p_r (y|x)"
      }
    }
  },
  {
    "n": {
"identity": 1219,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "预测概率的负对数〖-log〗⁡〖p_θ (y|x)〗"
      }
    }
  },
  {
    "n": {
"identity": 1220,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "感知器"
      }
    }
  },
  {
    "n": {
"identity": 1221,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "模拟生物神经元行为的机器，有与生物神经元相对应的部件，如权重（突触）、偏置（阈值）及激活函数（细胞体），输出为+1或-1。"
      }
    }
  },
  {
    "n": {
"identity": 1222,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "学习算法"
      }
    }
  },
  {
    "n": {
"identity": 1223,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "一种错误驱动的在线学习算法"
      }
    }
  },
  {
    "n": {
"identity": 1224,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "先初始化一个权重向量w←0（通常是全零向量）"
      }
    }
  },
  {
    "n": {
"identity": 1225,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "每次分错一个样本(x,y)时"
      }
    }
  },
  {
    "n": {
"identity": 1226,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "用这个样本来更新权重"
      }
    }
  },
  {
    "n": {
"identity": 1227,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "根据感知器的学习策略，可以反推出感知器的损失函数"
      }
    }
  },
  {
    "n": {
"identity": 1228,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "感知器的学习过程"
      }
    }
  },
  {
    "n": {
"identity": 1229,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "感知器参数学习的更新过程"
      }
    }
  },
  {
    "n": {
"identity": 1230,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "感知器学习的不足"
      }
    }
  },
  {
    "n": {
"identity": 1231,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "在数据集线性可分时，感知器虽然可以找到一个超平面把两类数据分开，但并不能保证其泛化能力．"
      }
    }
  },
  {
    "n": {
"identity": 1232,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "感知器对样本顺序比较敏感．每次迭代的顺序不一致时，找到的分割超平面也往往不一致．"
      }
    }
  },
  {
    "n": {
"identity": 1233,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "如果训练集不是线性可分的，就永远不会收敛"
      }
    }
  },
  {
    "n": {
"identity": 1234,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "随机梯度下降"
      }
    }
  },
  {
    "n": {
"identity": 1235,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "支持向量机SVM"
      }
    }
  },
  {
    "n": {
"identity": 1236,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "支持向量机的目标是寻找一个超平面(w*,b*)使得y最大"
      }
    }
  },
  {
    "n": {
"identity": 1237,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "对于一个线性可分的数据集，其分割超平面有很多个，但是间隔最大的超平面是唯一的"
      }
    }
  },
  {
    "n": {
"identity": 1238,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "二次规划"
      }
    }
  },
  {
    "n": {
"identity": 1239,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "SMO"
      }
    }
  },
  {
    "n": {
"identity": 1240,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "不同损失函数的对比"
      }
    }
  },
  {
    "n": {
"identity": 1241,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "一个好的损失函数应随着yf(x;w)的增大而减少"
      }
    }
  },
  {
    "n": {
"identity": 1242,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "概率图模型"
      }
    }
  },
  {
    "n": {
"identity": 1243,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "概率图模型概述"
      }
    }
  },
  {
    "n": {
"identity": 1244,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "概率图背景知识"
      }
    }
  },
  {
    "n": {
"identity": 1245,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "概率论与图论相结合的产物， 为统计推理和学习提供了一个统-的灵活框架"
      }
    }
  },
  {
    "n": {
"identity": 1246,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "概率图模型是一类用图结构来表达各属性之间相关关系的概率模型"
      }
    }
  },
  {
    "n": {
"identity": 1247,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "概率图模型的发展历程"
      }
    }
  },
  {
    "n": {
"identity": 1248,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "到 20 世纪 80 年代末，在贝叶斯网络和一般的概率图模型中的推理取得重要进展。"
      }
    }
  },
  {
    "n": {
"identity": 1249,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "2003 年，Wainwright 等人提出了树重置权重信念传播（tree-reweighted belief propagation）算法"
      }
    }
  },
  {
    "n": {
"identity": 1250,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "2008年，Globerson 和 Sontag 等人提出了基于线性规划松弛和对偶分解的推理算法。"
      }
    }
  },
  {
    "n": {
"identity": 1251,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "概率图模型分类"
      }
    }
  },
  {
    "n": {
"identity": 1252,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "概率图的表示、推理、学习"
      }
    }
  },
  {
    "n": {
"identity": 1253,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "概率图模型的应用举例"
      }
    }
  },
  {
    "n": {
"identity": 1254,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "图像分割"
      }
    }
  },
  {
    "n": {
"identity": 1255,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "立体视觉"
      }
    }
  },
  {
    "n": {
"identity": 1256,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "图像去噪"
      }
    }
  },
  {
    "n": {
"identity": 1257,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "人体姿态估计"
      }
    }
  },
  {
    "n": {
"identity": 1258,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "医学图像处理"
      }
    }
  },
  {
    "n": {
"identity": 1259,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "医学诊断"
      }
    }
  },
  {
    "n": {
"identity": 1260,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "计算神经学"
      }
    }
  },
  {
    "n": {
"identity": 1261,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "概率图基本知识点"
      }
    }
  },
  {
    "n": {
"identity": 1262,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "概率分布"
      }
    }
  },
  {
    "n": {
"identity": 1263,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "条件概率分布"
      }
    }
  },
  {
    "n": {
"identity": 1264,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "乘法公式"
      }
    }
  },
  {
    "n": {
"identity": 1265,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "全概率公式"
      }
    }
  },
  {
    "n": {
"identity": 1266,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "贝叶斯公式"
      }
    }
  },
  {
    "n": {
"identity": 1267,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "条件独立性"
      }
    }
  },
  {
    "n": {
"identity": 1268,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "概率图模型常用的三个概念"
      }
    }
  },
  {
    "n": {
"identity": 1269,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "联合概率分布"
      }
    }
  },
  {
    "n": {
"identity": 1270,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "边缘概率"
      }
    }
  },
  {
    "n": {
"identity": 1271,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "最大后验概率状态"
      }
    }
  },
  {
    "n": {
"identity": 1272,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "图论基础"
      }
    }
  },
  {
    "n": {
"identity": 1273,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "图定义"
      }
    }
  },
  {
    "n": {
"identity": 1274,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "结点"
      }
    }
  },
  {
    "n": {
"identity": 1275,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "有向图和无向图"
      }
    }
  },
  {
    "n": {
"identity": 1276,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "树状图"
      }
    }
  },
  {
    "n": {
"identity": 1277,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "有向图"
      }
    }
  },
  {
    "n": {
"identity": 1278,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "有向图模型使用有向无环图（Directed Acyclic Graph，DAG）来描述变量之间的关系．如果两个节点之间有连边，表示对应的两个变量为因果关系，即不存在其他变量使得这两个节点对应的变量条件独立"
      }
    }
  },
  {
    "n": {
"identity": 1279,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "贝叶斯网络/信度网络"
      }
    }
  },
  {
    "n": {
"identity": 1280,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "用贝叶斯网络建模"
      }
    }
  },
  {
    "n": {
"identity": 1281,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "定义节点"
      }
    }
  },
  {
    "n": {
"identity": 1282,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "条件概率分布"
      }
    }
  },
  {
    "n": {
"identity": 1283,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "联合概率分布"
      }
    }
  },
  {
    "n": {
"identity": 1284,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "定义节点之间的概率依赖关系"
      }
    }
  },
  {
    "n": {
"identity": 1285,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "变量依赖情况"
      }
    }
  },
  {
    "n": {
"identity": 1286,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "顺序结构"
      }
    }
  },
  {
    "n": {
"identity": 1287,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "发散结构"
      }
    }
  },
  {
    "n": {
"identity": 1288,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "汇总结构"
      }
    }
  },
  {
    "n": {
"identity": 1289,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "表示联合概率分布"
      }
    }
  },
  {
    "n": {
"identity": 1290,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "变量独立性"
      }
    }
  },
  {
    "n": {
"identity": 1291,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "条件独立性"
      }
    }
  },
  {
    "n": {
"identity": 1292,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "联合概率分布链式法则"
      }
    }
  },
  {
    "n": {
"identity": 1293,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "概率影响的流动性"
      }
    }
  },
  {
    "n": {
"identity": 1294,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "朴素贝叶斯网络"
      }
    }
  },
  {
    "n": {
"identity": 1295,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "计算最大概率。根据贝叶斯定理，要求P(AIB), 只要求出P(BIA)即可。"
      }
    }
  },
  {
    "n": {
"identity": 1296,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "垃圾邮件分类"
      }
    }
  },
  {
    "n": {
"identity": 1297,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "分词（去除数字和标点）"
      }
    }
  },
  {
    "n": {
"identity": 1298,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "根据贝叶斯公式计算"
      }
    }
  },
  {
    "n": {
"identity": 1299,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "条件独立假设（朴素贝叶斯的前提)"
      }
    }
  },
  {
    "n": {
"identity": 1300,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "比较大小"
      }
    }
  },
  {
    "n": {
"identity": 1301,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "隐马尔可夫模型HMM"
      }
    }
  },
  {
    "n": {
"identity": 1302,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "HMM中的变量分为两组：状态变量与观测变量"
      }
    }
  },
  {
    "n": {
"identity": 1303,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "变量之间的依赖关系遵循如下两个规则"
      }
    }
  },
  {
    "n": {
"identity": 1304,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "观测变量的取值仅依赖于状态变量"
      }
    }
  },
  {
    "n": {
"identity": 1305,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "下一个状态的取值仅依赖于当前状态"
      }
    }
  },
  {
    "n": {
"identity": 1306,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "确定一个HMM模型需要以下三组参数"
      }
    }
  },
  {
    "n": {
"identity": 1307,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "状态转移概率矩阵∶从当前状态转移到下一个状态的概率矩阵，通常记为A:"
      }
    }
  },
  {
    "n": {
"identity": 1308,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "根据状态输出观测值概率矩阵，通常记为B"
      }
    }
  },
  {
    "n": {
"identity": 1309,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "初始状态概率向量，通常记为Π"
      }
    }
  },
  {
    "n": {
"identity": 1310,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "当确定了一个HMM模型的三个参数后，便生成观测值序列"
      }
    }
  },
  {
    "n": {
"identity": 1311,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "隐马尔科夫模型(HMM)描述的是隐藏的马尔科夫链随机生成观测序列的过程"
      }
    }
  },
  {
    "n": {
"identity": 1312,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "无向图"
      }
    }
  },
  {
    "n": {
"identity": 1313,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "无向图模型使用无向图（Undirected Graph）来描述变量之间的关系． 每条边代表两个变量之间有概率依赖关系，但是并不一定是因果关系"
      }
    }
  },
  {
    "n": {
"identity": 1314,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "马尔可夫随机场"
      }
    }
  },
  {
    "n": {
"identity": 1315,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "一种典型的马尔可夫网，即使用无向边来表达变量间的依赖关系"
      }
    }
  },
  {
    "n": {
"identity": 1316,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "对于关系图中的一个子集，若任意两节点间都有边连接，则称该子集为一个团；若再加一个节点便不能形成团，则称该子集为极大团"
      }
    }
  },
  {
    "n": {
"identity": 1317,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "MRF的联合概率函数"
      }
    }
  },
  {
    "n": {
"identity": 1318,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于联合概率进行建模"
      }
    }
  },
  {
    "n": {
"identity": 1319,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "规范化因子，所有X可能取值，保证最终EP(×)=1"
      }
    }
  },
  {
    "n": {
"identity": 1320,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "局部势函数和边缘概率的关系"
      }
    }
  },
  {
    "n": {
"identity": 1321,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "图像处理领域"
      }
    }
  },
  {
    "n": {
"identity": 1322,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "利用成对MRF对图像处理问题建模"
      }
    }
  },
  {
    "n": {
"identity": 1323,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "定义能量函数"
      }
    }
  },
  {
    "n": {
"identity": 1324,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "条件随机场"
      }
    }
  },
  {
    "n": {
"identity": 1325,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "条件随机场模型是Lafferty于2001年提出的一种判别式、概率无向图学习模型,是一种用于标注和切分有序数据的条件概率模型。"
      }
    }
  },
  {
    "n": {
"identity": 1326,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "CRF定义"
      }
    }
  },
  {
    "n": {
"identity": 1327,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "CRF也通过团以及势函数的概念来定义条件概率P(y|x)"
      }
    }
  },
  {
    "n": {
"identity": 1328,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "特征函数"
      }
    }
  },
  {
    "n": {
"identity": 1329,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "转移特征函数"
      }
    }
  },
  {
    "n": {
"identity": 1330,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "状态特征函数"
      }
    }
  },
  {
    "n": {
"identity": 1331,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "CRF发展简史"
      }
    }
  },
  {
    "n": {
"identity": 1332,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "机器学习阶段"
      }
    }
  },
  {
    "n": {
"identity": 1333,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "深度学习阶段"
      }
    }
  },
  {
    "n": {
"identity": 1334,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Attention阶段"
      }
    }
  },
  {
    "n": {
"identity": 1335,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "因子图"
      }
    }
  },
  {
    "n": {
"identity": 1336,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "贝叶斯网络和MRF都可以用因子图表示"
      }
    }
  },
  {
    "n": {
"identity": 1337,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "因子图是一类无向概率图模型，包括变量节点和因子节点。"
      }
    }
  },
  {
    "n": {
"identity": 1338,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "学习与推断"
      }
    }
  },
  {
    "n": {
"identity": 1339,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "推理"
      }
    }
  },
  {
    "n": {
"identity": 1340,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "推理问题的意义"
      }
    }
  },
  {
    "n": {
"identity": 1341,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "概率推理相当于模型求解"
      }
    }
  },
  {
    "n": {
"identity": 1342,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "概率图模型推理复杂度高，精确推理是NP难问题"
      }
    }
  },
  {
    "n": {
"identity": 1343,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "图模型学习也蕴含推理过程"
      }
    }
  },
  {
    "n": {
"identity": 1344,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "推理问题的分类"
      }
    }
  },
  {
    "n": {
"identity": 1345,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "概率推理"
      }
    }
  },
  {
    "n": {
"identity": 1346,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "边缘概率"
      }
    }
  },
  {
    "n": {
"identity": 1347,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "最大后验概率状态"
      }
    }
  },
  {
    "n": {
"identity": 1348,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "求归一化因子"
      }
    }
  },
  {
    "n": {
"identity": 1349,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "变量消元法—精确推理"
      }
    }
  },
  {
    "n": {
"identity": 1350,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "最大后验概率推理"
      }
    }
  },
  {
    "n": {
"identity": 1364,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "MAP推理"
      }
    }
  },
  {
    "n": {
"identity": 1365,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "变量消元法求MAP"
      }
    }
  },
  {
    "n": {
"identity": 1366,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "信念传播法—近似推理"
      }
    }
  },
  {
    "n": {
"identity": 1367,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "信念传播可以理解成:一个节点在接收到所有其它节点的消息后才向另一个节点发送消息，同时当前节点的边缘概率正比于他所接收的消息的乘积:"
      }
    }
  },
  {
    "n": {
"identity": 1368,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "BP算法"
      }
    }
  },
  {
    "n": {
"identity": 1369,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "BP算法可以在聚类图上运行，也可以在因子图上执行。"
      }
    }
  },
  {
    "n": {
"identity": 1370,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "学习"
      }
    }
  },
  {
    "n": {
"identity": 1371,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "参数学习"
      }
    }
  },
  {
    "n": {
"identity": 1372,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "结构学习"
      }
    }
  },
  {
    "n": {
"identity": 1373,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "图模型的结构未知，从样本集（训练数据）对图模型的结构进行学习"
      }
    }
  },
  {
    "n": {
"identity": 1374,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "贝叶斯网络结构学习常用方法:"
      }
    }
  },
  {
    "n": {
"identity": 1375,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "基于约束的结构学习"
      }
    }
  },
  {
    "n": {
"identity": 1376,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "基于得分的结构学习"
      }
    }
  },
  {
    "n": {
"identity": 1377,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "结构似然得分"
      }
    }
  },
  {
    "n": {
"identity": 1378,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "贝叶斯得分"
      }
    }
  },
  {
    "n": {
"identity": 1379,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "模型表示"
      }
    }
  },
  {
    "n": {
"identity": 1380,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "有向图模型"
      }
    }
  },
  {
    "n": {
"identity": 1381,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Sigmoid信念网络"
      }
    }
  },
  {
    "n": {
"identity": 1382,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "朴素贝叶斯分类器"
      }
    }
  },
  {
    "n": {
"identity": 1383,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "隐马尔可夫模型"
      }
    }
  },
  {
    "n": {
"identity": 1384,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "无向图模型"
      }
    }
  },
  {
    "n": {
"identity": 1385,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "对数线性模型"
      }
    }
  },
  {
    "n": {
"identity": 1386,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "条件随机场"
      }
    }
  },
  {
    "n": {
"identity": 1387,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "推断"
      }
    }
  },
  {
    "n": {
"identity": 1388,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "边际概率"
      }
    }
  },
  {
    "n": {
"identity": 1389,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "精确推断"
      }
    }
  },
  {
    "n": {
"identity": 1390,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "变量消去法"
      }
    }
  },
  {
    "n": {
"identity": 1391,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "信念传播算法"
      }
    }
  },
  {
    "n": {
"identity": 1392,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "联合树算法"
      }
    }
  },
  {
    "n": {
"identity": 1393,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "近似推断"
      }
    }
  },
  {
    "n": {
"identity": 1394,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "环路信念传播"
      }
    }
  },
  {
    "n": {
"identity": 1395,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "变分推断"
      }
    }
  },
  {
    "n": {
"identity": 1396,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "蒙特卡罗方法"
      }
    }
  },
  {
    "n": {
"identity": 1397,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "MH算法"
      }
    }
  },
  {
    "n": {
"identity": 1398,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Metropolis算法"
      }
    }
  },
  {
    "n": {
"identity": 1399,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "吉布斯采样"
      }
    }
  },
  {
    "n": {
"identity": 1400,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "EM算法"
      }
    }
  },
  {
    "n": {
"identity": 1401,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "E步"
      }
    }
  },
  {
    "n": {
"identity": 1402,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "M步"
      }
    }
  },
  {
    "n": {
"identity": 1403,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "监督学习"
      }
    }
  },
  {
    "n": {
"identity": 1404,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "监督学习概述"
      }
    }
  },
  {
    "n": {
"identity": 1405,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "监督学习三要素"
      }
    }
  },
  {
    "n": {
"identity": 1406,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "标注数据"
      }
    }
  },
  {
    "n": {
"identity": 1407,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "学习模型"
      }
    }
  },
  {
    "n": {
"identity": 1408,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "损失函数"
      }
    }
  },
  {
    "n": {
"identity": 1409,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "一个好的损失函数应随着yf(x;w)的增大而减少"
      }
    }
  },
  {
    "n": {
"identity": 1410,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "经验风险与期望风险"
      }
    }
  },
  {
    "n": {
"identity": 1411,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "结构风险最小化"
      }
    }
  },
  {
    "n": {
"identity": 1412,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "经验风险最小化"
      }
    }
  },
  {
    "n": {
"identity": 1413,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "期望风险最小化"
      }
    }
  },
  {
    "n": {
"identity": 1414,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "生成方法和判别方法"
      }
    }
  },
  {
    "n": {
"identity": 1415,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "监督学习方法又可以分为生成方法(generative approach)和判别方法(discriminative approach)。所学到的模型分别称为生成模型(generative model)和判别模型(discriminative model)."
      }
    }
  },
  {
    "n": {
"identity": 1416,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "决策树"
      }
    }
  },
  {
    "n": {
"identity": 1417,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "决策树生成算法"
      }
    }
  },
  {
    "n": {
"identity": 1418,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于信息增益的ID3算法；"
      }
    }
  },
  {
    "n": {
"identity": 1419,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于信息增益率的C4.5算法；"
      }
    }
  },
  {
    "n": {
"identity": 1420,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于Gini指数的CART算法"
      }
    }
  },
  {
    "n": {
"identity": 1421,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "信息熵"
      }
    }
  },
  {
    "n": {
"identity": 1422,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "信息嫡，是用来衡量一个随机变量出现的期望值。如果信息的不确定性越大，嫡的值也就越大，出现的各种情况也就越多。"
      }
    }
  },
  {
    "n": {
"identity": 1423,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "熵越大，随机变量的不确定性越大"
      }
    }
  },
  {
    "n": {
"identity": 1424,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据集中的信息熵"
      }
    }
  },
  {
    "n": {
"identity": 1425,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "条件熵"
      }
    }
  },
  {
    "n": {
"identity": 1426,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "条件嫡H(Y|x):表示在己知随机变量X的条件下随机变量Y的不确定性"
      }
    }
  },
  {
    "n": {
"identity": 1427,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "信息增益(Information Gain)"
      }
    }
  },
  {
    "n": {
"identity": 1428,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "决策树ID3算法"
      }
    }
  },
  {
    "n": {
"identity": 1429,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "ID3算法：以信息增益最大的属性为分类特征基于贪心策略自顶向下地搜索遍历决策树空间，通过递归方式构建决策树。"
      }
    }
  },
  {
    "n": {
"identity": 1430,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "ID3算法流程"
      }
    }
  },
  {
    "n": {
"identity": 1431,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "ID3算法优缺点"
      }
    }
  },
  {
    "n": {
"identity": 1432,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "C4.5算法"
      }
    }
  },
  {
    "n": {
"identity": 1433,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "信息增益率最大的属性做为当前节点的划分属性。"
      }
    }
  },
  {
    "n": {
"identity": 1434,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "改进1：信息增益率"
      }
    }
  },
  {
    "n": {
"identity": 1435,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "机器学习和模式识别概述"
      }
    }
  },
  {
    "n": {
"identity": 1436,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "学见（Learnware）"
      }
    }
  },
  {
    "n": {
"identity": 1437,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "预训练的模型"
      }
    }
  },
  {
    "n": {
"identity": 1438,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "可重用"
      }
    }
  },
  {
    "n": {
"identity": 1439,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "可演进"
      }
    }
  },
  {
    "n": {
"identity": 1440,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "可了解"
      }
    }
  },
  {
    "n": {
"identity": 1441,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "描述模型的规约"
      }
    }
  },
  {
    "n": {
"identity": 1442,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于逻辑"
      }
    }
  },
  {
    "n": {
"identity": 1443,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于统计量"
      }
    }
  },
  {
    "n": {
"identity": 1444,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "改进2：处理连续值"
      }
    }
  },
  {
    "n": {
"identity": 1445,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "改进3：缺失值的处理"
      }
    }
  },
  {
    "n": {
"identity": 1446,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "改进4：过拟合问题"
      }
    }
  },
  {
    "n": {
"identity": 1447,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "剪枝"
      }
    }
  },
  {
    "n": {
"identity": 1448,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "预剪枝"
      }
    }
  },
  {
    "n": {
"identity": 1449,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "后剪枝"
      }
    }
  },
  {
    "n": {
"identity": 1450,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "悲观错误剪枝（PEP）算法"
      }
    }
  },
  {
    "n": {
"identity": 1451,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "CART算法"
      }
    }
  },
  {
    "n": {
"identity": 1452,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "ID3算法和C4.5算法：构建的决策树模型都属于分类树；"
      }
    }
  },
  {
    "n": {
"identity": 1453,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "CART算法(Classification and Regression Tree):是在ID3的基础上进行优化的决策树"
      }
    }
  },
  {
    "n": {
"identity": 1454,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "CART算法构造分类决策树"
      }
    }
  },
  {
    "n": {
"identity": 1455,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "CART在分类问题中采用GINI值来衡量节点的纯度。"
      }
    }
  },
  {
    "n": {
"identity": 1456,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "CART算法构造回归决策树"
      }
    }
  },
  {
    "n": {
"identity": 1457,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "回归树则是采用样本方差衡量节点纯度，节点越不纯，节点分类或者预测的效果就越差。"
      }
    }
  },
  {
    "n": {
"identity": 1458,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "过拟合问题"
      }
    }
  },
  {
    "n": {
"identity": 1459,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "CART采用CCP(代价复杂度）剪枝方法。"
      }
    }
  },
  {
    "n": {
"identity": 1460,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "监督学习-神经网络"
      }
    }
  },
  {
    "n": {
"identity": 1461,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "神经网络历史进展"
      }
    }
  },
  {
    "n": {
"identity": 1462,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "人工神经网络(Artificial Neural Networks，简记作ANN)，是对人类大脑系统的一阶特性的一种描述。简单地讲，它是一个数学模型，可以用电子线路来实现，也可以用计算机程序来模拟，是人工智能研究的一种方法。"
      }
    }
  },
  {
    "n": {
"identity": 1463,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "神经网络是一种大规模的并行分布式处理器，天然具有存储并使用经验知识的能。它从两个方面上模拟大脑:"
      }
    }
  },
  {
    "n": {
"identity": 1464,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "网络获取的知识是通过学习来获取的;"
      }
    }
  },
  {
    "n": {
"identity": 1465,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "内部神经元的连接强度，即突触权重，用于储存获取的知识．"
      }
    }
  },
  {
    "n": {
"identity": 1466,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "神经网络知识点"
      }
    }
  },
  {
    "n": {
"identity": 1467,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "隐藏层数量对神经网络的影响"
      }
    }
  },
  {
    "n": {
"identity": 1468,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "随着神经网络隐藏层的增加，网络的特征表达能力逐步增加;网络的分类能力也逐步增加。"
      }
    }
  },
  {
    "n": {
"identity": 1469,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "常见的激活函数- Sigmoid函数"
      }
    }
  },
  {
    "n": {
"identity": 1470,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Sigmoid函数:单调连续，求导容易，输出有界，网络比较容易收敛。在物理意义上最为接近生物神经元。"
      }
    }
  },
  {
    "n": {
"identity": 1471,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "tanh函数"
      }
    }
  },
  {
    "n": {
"identity": 1472,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "tanh函数:与sigmoid相比，它的输出均值是0，使得其收敛速度要比sigmoid快，减少迭代次数。tanh也存在梯度消失的问题。"
      }
    }
  },
  {
    "n": {
"identity": 1473,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "ReLU"
      }
    }
  },
  {
    "n": {
"identity": 1474,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "优点：实现简单，计算量小，收敛快速。有效缓解了梯度消失的问题。"
      }
    }
  },
  {
    "n": {
"identity": 1475,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "缺点：无上界，训练相对易发散。导致小于零的神经元失活。转折点定义的曲面也是有“棱角”的，在某些回归问题中，显得不够平滑。"
      }
    }
  },
  {
    "n": {
"identity": 1476,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Softplus"
      }
    }
  },
  {
    "n": {
"identity": 1477,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Softplus:在ReLU的基础上，增加了一点计算复杂度，但是其有连续的导数，且定义的曲面也相对平滑。"
      }
    }
  },
  {
    "n": {
"identity": 1478,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Leaky ReLu"
      }
    }
  },
  {
    "n": {
"identity": 1479,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Leaky ReLu:保留了一些负轴的值，使得负轴的信息不会全部丢失。"
      }
    }
  },
  {
    "n": {
"identity": 1480,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "SoftMax"
      }
    }
  },
  {
    "n": {
"identity": 1481,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Softmax函数的功能就是将一个K维的任意实数向量映射成另一个K维的实数向量，其中向量中的每个元素取值都介于(0，1)之间。新的向量所有维度模长之和为1."
      }
    }
  },
  {
    "n": {
"identity": 1482,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "激活函数设计需考虑的因素"
      }
    }
  },
  {
    "n": {
"identity": 1483,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "非线性、连续可微性、有界性、单调性、平滑性"
      }
    }
  },
  {
    "n": {
"identity": 1484,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "神经网络类型"
      }
    }
  },
  {
    "n": {
"identity": 1485,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "神经网络的结构分类"
      }
    }
  },
  {
    "n": {
"identity": 1486,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "分层结构"
      }
    }
  },
  {
    "n": {
"identity": 1487,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "前馈网络，有明显层次，信息流向由输入层到输出层"
      }
    }
  },
  {
    "n": {
"identity": 1488,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "相互连接结构"
      }
    }
  },
  {
    "n": {
"identity": 1489,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "反馈网络，没有明显层次，任意两个神经元之间可达，具有输出单元到隐层单元或输入单元的反馈连接"
      }
    }
  },
  {
    "n": {
"identity": 1490,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "前馈神经网络"
      }
    }
  },
  {
    "n": {
"identity": 1491,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "前馈神经网络概述"
      }
    }
  },
  {
    "n": {
"identity": 1492,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "感知机"
      }
    }
  },
  {
    "n": {
"identity": 1493,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "卷积神经网络"
      }
    }
  },
  {
    "n": {
"identity": 1494,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "前馈神经网络是一种最简单的神经网络，各神经元分层排列。每个神经元只与前一层的神经元相连，同一层的神经元之间没有互相连接，层间信息的传送只沿一个方向进行。"
      }
    }
  },
  {
    "n": {
"identity": 1495,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "前向传播"
      }
    }
  },
  {
    "n": {
"identity": 1496,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "损失函数"
      }
    }
  },
  {
    "n": {
"identity": 1497,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "损失函数衡量了评分函数的预测与真实样本标签的吻合度。"
      }
    }
  },
  {
    "n": {
"identity": 1498,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "交叉熵误差"
      }
    }
  },
  {
    "n": {
"identity": 1499,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "均方误差"
      }
    }
  },
  {
    "n": {
"identity": 1500,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "损失函数的极值"
      }
    }
  },
  {
    "n": {
"identity": 1501,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "目的"
      }
    }
  },
  {
    "n": {
"identity": 1502,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "限制"
      }
    }
  },
  {
    "n": {
"identity": 1503,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "解决思路"
      }
    }
  },
  {
    "n": {
"identity": 1504,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "梯度下降法"
      }
    }
  },
  {
    "n": {
"identity": 1505,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "函数下降(上升）最快的方向:函数值变化率最大的方向。"
      }
    }
  },
  {
    "n": {
"identity": 1506,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "导数"
      }
    }
  },
  {
    "n": {
"identity": 1507,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "方向导数"
      }
    }
  },
  {
    "n": {
"identity": 1508,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "最大方向导数：梯度"
      }
    }
  },
  {
    "n": {
"identity": 1509,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "全局梯度下降法（BGD）"
      }
    }
  },
  {
    "n": {
"identity": 1510,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "收敛过程非常慢，因为每次更新权值都需要计算所有的训练样例;"
      }
    }
  },
  {
    "n": {
"identity": 1511,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "随机梯度下降法（SGD）"
      }
    }
  },
  {
    "n": {
"identity": 1512,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "因为随机梯度下降是随机选择一个样本进行迭代更新一次，"
      }
    }
  },
  {
    "n": {
"identity": 1513,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "所以SGD伴随的一个问题是噪音较BGD要多，使得SGD并不是每次迭代都向着整体优化方向。"
      }
    }
  },
  {
    "n": {
"identity": 1514,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "小批量梯度下降法（MBGD）"
      }
    }
  },
  {
    "n": {
"identity": 1515,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "通过矩阵运算，每次在一个batch 上优化参数并不会比单个数据慢太多。"
      }
    }
  },
  {
    "n": {
"identity": 1516,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "但是每次使用一个batch可以大大减小收敛所需要的迭代次数,同时可以使收敛到的结果更加接近梯度下降的效果。"
      }
    }
  },
  {
    "n": {
"identity": 1517,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "多层感知机模型（MLP）"
      }
    }
  },
  {
    "n": {
"identity": 1518,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "通常将没有环路或回路的人工神经网络称为前馈网络模型。感知机是一种最简单的前馈网络模型。"
      }
    }
  },
  {
    "n": {
"identity": 1519,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "在感知机模型的基础之上添加隐含层，通常将此类模型称为多层感知机模型（MLP）。"
      }
    }
  },
  {
    "n": {
"identity": 1520,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "MLP模型中信息处理神经元的激活函数通常为Sigmoid函数。故MLP模型的隐含层可将数据通过非线性映射表示在另一个空间当中，并将模型输出限制在区间(0,1)当中。"
      }
    }
  },
  {
    "n": {
"identity": 1521,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "BP(Back Propagation)神经网络模型"
      }
    }
  },
  {
    "n": {
"identity": 1522,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "BP(Back Propagation)神经网络模型概述"
      }
    }
  },
  {
    "n": {
"identity": 1523,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "由于MLP模型输出层只有一个神经元，故只适用于二分类任务。"
      }
    }
  },
  {
    "n": {
"identity": 1524,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "对于多分类任务，可考虑增加输出层神经元个数，使得模型具备处理多分类任务的能力，由此得到一种如下图所示的反向传播神经网络模型或BP(Back Propagation)神经网络模型。"
      }
    }
  },
  {
    "n": {
"identity": 1525,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "反向传播算法（BP）"
      }
    }
  },
  {
    "n": {
"identity": 1526,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "误差反向传播算法(Error Back Propagation）是神经网络的重要算法。它使用链式求导法则将输出层的误差反向传回给网络，使神经网络的权重有了较简单的梯度计算实现方法。"
      }
    }
  },
  {
    "n": {
"identity": 1527,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "步骤"
      }
    }
  },
  {
    "n": {
"identity": 1528,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "将损失函数值反向传播给每个计算单元。"
      }
    }
  },
  {
    "n": {
"identity": 1529,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "每个计算单元根据获得的误差更新权重。"
      }
    }
  },
  {
    "n": {
"identity": 1530,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "反馈网络模型Hopfield网络"
      }
    }
  },
  {
    "n": {
"identity": 1531,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "离散型HNN(DHNN)"
      }
    }
  },
  {
    "n": {
"identity": 1532,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "每个神经元的输出通过加权与其余神经元的输入端连接；"
      }
    }
  },
  {
    "n": {
"identity": 1533,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "输入模式向量的各分量及神经元的输出值取(+1)或(-1)；"
      }
    }
  },
  {
    "n": {
"identity": 1534,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "神经元的个数与输入模式向量的维数相同；"
      }
    }
  },
  {
    "n": {
"identity": 1535,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "记忆样本记忆在神经元之间的连接权上。"
      }
    }
  },
  {
    "n": {
"identity": 1536,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Hopfield神经网络的局限性"
      }
    }
  },
  {
    "n": {
"identity": 1537,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "网络能记忆和正确回忆的样本数相当有限"
      }
    }
  },
  {
    "n": {
"identity": 1538,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "如果记忆中的某一样本的某些分量与别的记忆样本的对应分量相同，这个记忆样本可能是一个不稳定的平衡点"
      }
    }
  },
  {
    "n": {
"identity": 1539,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "可以利用正交算法消除"
      }
    }
  },
  {
    "n": {
"identity": 1540,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "神经网络模型训练过程"
      }
    }
  },
  {
    "n": {
"identity": 1541,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "直接影响网络模型性能因素"
      }
    }
  },
  {
    "n": {
"identity": 1542,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "训练样本集的大小"
      }
    }
  },
  {
    "n": {
"identity": 1543,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "样本质量"
      }
    }
  },
  {
    "n": {
"identity": 1544,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "网络模型结构"
      }
    }
  },
  {
    "n": {
"identity": 1545,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "优化目标函数"
      }
    }
  },
  {
    "n": {
"identity": 1546,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "模型优化算法"
      }
    }
  },
  {
    "n": {
"identity": 1547,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据准备与预处理"
      }
    }
  },
  {
    "n": {
"identity": 1548,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "1.首先需要针对任务需求收集样本并对其进行标注"
      }
    }
  },
  {
    "n": {
"identity": 1549,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "2.样本增强方式实现对训练样本集扩充"
      }
    }
  },
  {
    "n": {
"identity": 1550,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "3.将带标注样本划分为两部分，其中一部分样本作为训练集用于模型训练，其余部分作为测试集用于验证模型性能"
      }
    }
  },
  {
    "n": {
"identity": 1551,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "4.对数据进行特征提取等预处理"
      }
    }
  },
  {
    "n": {
"identity": 1552,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "5.采用合适方式对标签数据进行编码"
      }
    }
  },
  {
    "n": {
"identity": 1553,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "模型初始化"
      }
    }
  },
  {
    "n": {
"identity": 1554,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "模型初始化参数"
      }
    }
  },
  {
    "n": {
"identity": 1555,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "连接权重"
      }
    }
  },
  {
    "n": {
"identity": 1556,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "偏置项"
      }
    }
  },
  {
    "n": {
"identity": 1557,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "超参数"
      }
    }
  },
  {
    "n": {
"identity": 1558,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "确定优化目标"
      }
    }
  },
  {
    "n": {
"identity": 1559,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "根据某一原则构造用于模型优化的目标函数"
      }
    }
  },
  {
    "n": {
"identity": 1560,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "针对不同类型的实际任务，通常所使用的目标函数形式也有所不同"
      }
    }
  },
  {
    "n": {
"identity": 1561,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "hinge损失函数度量网络模型输出值f(X_i)与样本真实值y_i之间的差异"
      }
    }
  },
  {
    "n": {
"identity": 1562,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "损失函数要求正样本表示为+1，负样本表示为-1"
      }
    }
  },
  {
    "n": {
"identity": 1563,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "交叉熵损失函数度量网络模型输出值f(X_i)与样本真实值y_i之间的差异"
      }
    }
  },
  {
    "n": {
"identity": 1564,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "模型优化求解"
      }
    }
  },
  {
    "n": {
"identity": 1565,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "前向计算求得目标函数具体取值"
      }
    }
  },
  {
    "n": {
"identity": 1566,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "使用梯度下降、牛顿迭代或随机梯度下降等模型优化算法对目标函数进行迭代"
      }
    }
  },
  {
    "n": {
"identity": 1567,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "优化算法主要是依据梯度和误差进行参数更新"
      }
    }
  },
  {
    "n": {
"identity": 1568,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "正则化方法通常称之为随机失活(Dropout)方法"
      }
    }
  },
  {
    "n": {
"identity": 1569,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Dropout正则化方法的基本思想通过随机去除网络模型中的非输出节点的方式实现减小模型容量效果。"
      }
    }
  },
  {
    "n": {
"identity": 1570,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "一定概率p设置每一个神经元的输出为0"
      }
    }
  },
  {
    "n": {
"identity": 1571,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "采用Dropout正则化方法相当于构造了众多不同子网络模型，并将这些子网络集成起来获得训练模型"
      }
    }
  },
  {
    "n": {
"identity": 1572,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "验证模型性能"
      }
    }
  },
  {
    "n": {
"identity": 1573,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "验证模型确定优化模型的性能是否满足任务需求"
      }
    }
  },
  {
    "n": {
"identity": 1574,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "由于单次模型性能验证实验存在很强的随机性，故通常采用交叉验证法进行模型性能测试和验证"
      }
    }
  },
  {
    "n": {
"identity": 1575,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "监督学习-集成学习"
      }
    }
  },
  {
    "n": {
"identity": 1576,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "集成学习概述"
      }
    }
  },
  {
    "n": {
"identity": 1577,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "集成学习（Ensembel Learning）是用多个弱分类器构成一个强分类器，一般的弱分类器可以由决策树，神经网络，贝叶斯分类器，K-近邻等构成"
      }
    }
  },
  {
    "n": {
"identity": 1578,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "让机器学习效果更好，单个不行，群殴走起"
      }
    }
  },
  {
    "n": {
"identity": 1579,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Bagging模型"
      }
    }
  },
  {
    "n": {
"identity": 1580,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Bagging算法原理和 Boosting不同，它的弱学习器之间没有依赖关系，可以并行生成"
      }
    }
  },
  {
    "n": {
"identity": 1581,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Boosting模型"
      }
    }
  },
  {
    "n": {
"identity": 1582,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "提升式集成学习方法"
      }
    }
  },
  {
    "n": {
"identity": 1583,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "主要通过集成各个弱学习器的成功经验和失败教训实现对模型性的提升"
      }
    }
  },
  {
    "n": {
"identity": 1584,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Stacking模型"
      }
    }
  },
  {
    "n": {
"identity": 1585,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "堆叠"
      }
    }
  },
  {
    "n": {
"identity": 1586,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "可以堆叠各种各样的分类器（KNN，SVM，RF...）"
      }
    }
  },
  {
    "n": {
"identity": 1587,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "分阶段"
      }
    }
  },
  {
    "n": {
"identity": 1588,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "第一阶段得出各自结果，第二阶段再用前一阶段结果训练"
      }
    }
  },
  {
    "n": {
"identity": 1589,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "结合策略"
      }
    }
  },
  {
    "n": {
"identity": 1590,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "平均法"
      }
    }
  },
  {
    "n": {
"identity": 1591,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "对于若干和弱学习器的输出进行平均得到最终的预测输出"
      }
    }
  },
  {
    "n": {
"identity": 1592,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "投票法"
      }
    }
  },
  {
    "n": {
"identity": 1593,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "对于分类问题的预测，通常使用的是投票法"
      }
    }
  },
  {
    "n": {
"identity": 1594,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "学习法"
      }
    }
  },
  {
    "n": {
"identity": 1595,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "将训练集弱学习器的学习结果作为输入，将训练集的输出作为输出，重新训练一个学习器来得到最终结果"
      }
    }
  },
  {
    "n": {
"identity": 1596,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "代表方法是stacking"
      }
    }
  },
  {
    "n": {
"identity": 1597,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "集成学习的流程"
      }
    }
  },
  {
    "n": {
"identity": 1598,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "集成学习法"
      }
    }
  },
  {
    "n": {
"identity": 1599,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "通常一个集成分类器的分类性能会好于单个分类器。集成学习法由训练数据构建一组基分类器(base classifier)，然后通过对每个基分类器的预测进行投票或学习法来进行分类。"
      }
    }
  },
  {
    "n": {
"identity": 1600,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "集成方法"
      }
    }
  },
  {
    "n": {
"identity": 1601,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "一种是使用训练集的不同子集训练得到不同的基分类器。"
      }
    }
  },
  {
    "n": {
"identity": 1602,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "另一种方法是使用同一个训练集的不同属性子集训练得到不同的基分类器。"
      }
    }
  },
  {
    "n": {
"identity": 1603,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "GBDT"
      }
    }
  },
  {
    "n": {
"identity": 1604,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "GBDT基本概念"
      }
    }
  },
  {
    "n": {
"identity": 1605,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "梯度提升决策树"
      }
    }
  },
  {
    "n": {
"identity": 1606,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "GBDT的核心在于累加所有树的结果作为最终结果"
      }
    }
  },
  {
    "n": {
"identity": 1607,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "GBDT中的树都是回归树，不是分类树"
      }
    }
  },
  {
    "n": {
"identity": 1608,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "GB: Gradient Boosting梯度迭代"
      }
    }
  },
  {
    "n": {
"identity": 1609,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "GBDT的核心就在于，每一棵树学习的是之前所有树结论和的残差，这个残差就是一个加预测值后能得真实值的累加量。"
      }
    }
  },
  {
    "n": {
"identity": 1610,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "GBDT的应用"
      }
    }
  },
  {
    "n": {
"identity": 1611,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "GBDT几乎可用于所有回归问题(线性/非线性）亦可用于二分类问题﹐(设定阈值,大于阈值为正例，反之为负例)﹔不太适合做多分类问题;"
      }
    }
  },
  {
    "n": {
"identity": 1612,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "排序问题;"
      }
    }
  },
  {
    "n": {
"identity": 1613,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "常用于各大数据挖掘竞赛（模型融合);"
      }
    }
  },
  {
    "n": {
"identity": 1614,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "广告推荐。"
      }
    }
  },
  {
    "n": {
"identity": 1615,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "XGboost"
      }
    }
  },
  {
    "n": {
"identity": 1616,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "XGboost的基本概念"
      }
    }
  },
  {
    "n": {
"identity": 1617,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "XGBoost本质上还是GBDT，但是把速度和效率做到了极致;"
      }
    }
  },
  {
    "n": {
"identity": 1618,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "XGBoost对损失函数做了二阶的求导（泰勒展开)"
      }
    }
  },
  {
    "n": {
"identity": 1619,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "XGboost的目标函数"
      }
    }
  },
  {
    "n": {
"identity": 1620,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "XGBoost继承了GBDT，模型也是CART,但不仅限于回归树。因此还是沿用了加法模型，但是在目标函数上有所区别。"
      }
    }
  },
  {
    "n": {
"identity": 1621,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "目标函数: XGboost的目标函数包含了两个部分，第一部分还是损失函数，第二部分就是正则项。而且这里的正则化项是由K颗树的正则化项相加而来。"
      }
    }
  },
  {
    "n": {
"identity": 1622,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "XGboost的损失函数"
      }
    }
  },
  {
    "n": {
"identity": 1623,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "XGboost在损失函数项采用的是二阶求导"
      }
    }
  },
  {
    "n": {
"identity": 1624,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "在迭代更新的过程中g;和h;是可以并行计算的，因此，XGboost可以在提高准确率的同时还可以提高运算速度。"
      }
    }
  },
  {
    "n": {
"identity": 1625,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "XGboost的正则化项"
      }
    }
  },
  {
    "n": {
"identity": 1626,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "XGboost的应用"
      }
    }
  },
  {
    "n": {
"identity": 1627,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "将XGBoost引入到电子商务的商品推荐算法中，挖掘用户在电子商务平台的行为数据信息，建立分类预测模型，从而个性化地向用户推荐商品。"
      }
    }
  },
  {
    "n": {
"identity": 1628,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "通过数据挖掘方法来分析用户的行为模式数据，有利于更好地了解用户的购物习惯和倾向性，从而为预测用户的购买行为提供可能。"
      }
    }
  },
  {
    "n": {
"identity": 1629,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "XGboost和GBDT的不同"
      }
    }
  },
  {
    "n": {
"identity": 1630,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "传统GBDT以CART作为基分类器，XGboost还支持线性分类器"
      }
    }
  },
  {
    "n": {
"identity": 1631,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "传统GBDT在优化时只用到一阶导数信息，XGboost则对代价函数进行了二阶泰勒展开，同时用到了一阶和二阶导数。"
      }
    }
  },
  {
    "n": {
"identity": 1632,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "XGboost在代价函数里加入了正则项，用于控制模型的复杂度。"
      }
    }
  },
  {
    "n": {
"identity": 1633,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Shrinkage(缩减)，相当于学习速率(XGboost中的eta)"
      }
    }
  },
  {
    "n": {
"identity": 1634,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "列抽样(column subsampling)。XGboost借鉴了随机森林的做法，支持列抽样，不仅能降低过拟合，还能减少计算，这也是XGboost异于传统GBDT的一个特性。"
      }
    }
  },
  {
    "n": {
"identity": 1635,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "无监督模式识别"
      }
    }
  },
  {
    "n": {
"identity": 1636,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "无监督模式识别概述"
      }
    }
  },
  {
    "n": {
"identity": 1637,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "无监督学习∶是指在未加标签的数据中，根据数据之间本身的属性特征和关联性对数据进行区分，相似相近或关联性强的数据放在一起，而不相似不相近、关联性不强的数据不放在一起。"
      }
    }
  },
  {
    "n": {
"identity": 1638,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "无监督学习的本质是:利用无标签的数据学习数据的分布或数据与数据之间的关系。"
      }
    }
  },
  {
    "n": {
"identity": 1639,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "无监督学习最常应用的场景是部分降维算法、聚类算法和关联算法等。"
      }
    }
  },
  {
    "n": {
"identity": 1640,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "聚类"
      }
    }
  },
  {
    "n": {
"identity": 1641,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "聚类概述"
      }
    }
  },
  {
    "n": {
"identity": 1642,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "聚类分析(Cluster Analysis):研究“物以类聚”的一种多元统计方法，是将物理或抽象对象的集合分组为由类似的对象组成的多个簇(Cluster)的分析过程。国内称它为群分析、点群分析、簇群分析、集群分析等。"
      }
    }
  },
  {
    "n": {
"identity": 1643,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "聚类应用"
      }
    }
  },
  {
    "n": {
"identity": 1644,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "作为一个独立的工具获得数据的分布状况，观察每一簇数据的特征，集中对特定的聚簇集合作进一步地分析；"
      }
    }
  },
  {
    "n": {
"identity": 1645,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "作为其他数据挖掘任务（如分类、关联规则）的预处理步骤。"
      }
    }
  },
  {
    "n": {
"identity": 1646,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据预处理"
      }
    }
  },
  {
    "n": {
"identity": 1647,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "科学数据探索"
      }
    }
  },
  {
    "n": {
"identity": 1648,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "信息获取与文本挖掘"
      }
    }
  },
  {
    "n": {
"identity": 1649,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "空间数据库应用"
      }
    }
  },
  {
    "n": {
"identity": 1650,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "CRM客户关系管理"
      }
    }
  },
  {
    "n": {
"identity": 1651,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "聚类的流程"
      }
    }
  },
  {
    "n": {
"identity": 1652,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据准备"
      }
    }
  },
  {
    "n": {
"identity": 1653,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "属性选择"
      }
    }
  },
  {
    "n": {
"identity": 1654,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "属性提取"
      }
    }
  },
  {
    "n": {
"identity": 1655,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "结果评估"
      }
    }
  },
  {
    "n": {
"identity": 1656,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "常见距离函数"
      }
    }
  },
  {
    "n": {
"identity": 1657,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "通常使用距离来衡量两个对象之间的相异度。对象之间的距离越近表示它们越相似。"
      }
    }
  },
  {
    "n": {
"identity": 1658,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "明可夫斯基距离(Minkowski)"
      }
    }
  },
  {
    "n": {
"identity": 1659,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "属性分为两种:连续属性和离散属性"
      }
    }
  },
  {
    "n": {
"identity": 1660,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "余弦距离"
      }
    }
  },
  {
    "n": {
"identity": 1661,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "二元特征样本的距离度量"
      }
    }
  },
  {
    "n": {
"identity": 1662,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "二次型距离(Quadratic)"
      }
    }
  },
  {
    "n": {
"identity": 1663,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "在进行距离度量时，易知连续属性和存在序关系的离散属性都可以直接参与计算，因为它们都可以反映一种程度，我们称其为有序属性 ;而对于不存在序关系的离散属性，我们称其为∵无序属性”，显然无序属性再使用闵可夫斯基距离就行不通了。"
      }
    }
  },
  {
    "n": {
"identity": 1664,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "距离的度量方法并不一定需要满足前面所说的四个基本性质，这样的方法称为：非度量距离（non-metric distance）"
      }
    }
  },
  {
    "n": {
"identity": 1665,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "外部指标"
      }
    }
  },
  {
    "n": {
"identity": 1666,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "即将聚类结果与某个参考模型的结果进行比较，以参考模型的输出作为标准，来评价聚类好坏。"
      }
    }
  },
  {
    "n": {
"identity": 1667,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Jaccard系数(Jaccard Coefficient,简称JC)"
      }
    }
  },
  {
    "n": {
"identity": 1668,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "FM 指数(Fowlkes and Mallows Index，简称FMI)"
      }
    }
  },
  {
    "n": {
"identity": 1669,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Rand指数(Rand Index,简称RI)"
      }
    }
  },
  {
    "n": {
"identity": 1670,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "内部指标"
      }
    }
  },
  {
    "n": {
"identity": 1671,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "内部指标即不依赖任何外部模型，直接对聚类的结果进行评估，聚类的目的是想将那些相似的样本尽可能聚在一起，不相似的样本尽可能分开"
      }
    }
  },
  {
    "n": {
"identity": 1672,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "DB指数(Davies-Bouldin Index,简称DBI)"
      }
    }
  },
  {
    "n": {
"identity": 1673,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Dunn指数(Dunn Index,简称DI)"
      }
    }
  },
  {
    "n": {
"identity": 1674,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "聚类算法分类"
      }
    }
  },
  {
    "n": {
"identity": 1675,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于划分的方法"
      }
    }
  },
  {
    "n": {
"identity": 1676,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "k-mean"
      }
    }
  },
  {
    "n": {
"identity": 1677,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "k-中心点"
      }
    }
  },
  {
    "n": {
"identity": 1678,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "PAM"
      }
    }
  },
  {
    "n": {
"identity": 1679,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "EM"
      }
    }
  },
  {
    "n": {
"identity": 1680,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于层次的方法"
      }
    }
  },
  {
    "n": {
"identity": 1681,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "GAS"
      }
    }
  },
  {
    "n": {
"identity": 1682,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "GDS"
      }
    }
  },
  {
    "n": {
"identity": 1683,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "AGNES"
      }
    }
  },
  {
    "n": {
"identity": 1684,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "DIANA"
      }
    }
  },
  {
    "n": {
"identity": 1685,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "BIRCH"
      }
    }
  },
  {
    "n": {
"identity": 1686,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "CURE"
      }
    }
  },
  {
    "n": {
"identity": 1687,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "ROCK"
      }
    }
  },
  {
    "n": {
"identity": 1688,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Chameleon"
      }
    }
  },
  {
    "n": {
"identity": 1689,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于密度的方法"
      }
    }
  },
  {
    "n": {
"identity": 1690,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "DBSCAN"
      }
    }
  },
  {
    "n": {
"identity": 1691,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于网格的方法"
      }
    }
  },
  {
    "n": {
"identity": 1692,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "STING"
      }
    }
  },
  {
    "n": {
"identity": 1693,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "WaveCluster"
      }
    }
  },
  {
    "n": {
"identity": 1694,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于模型的方法"
      }
    }
  },
  {
    "n": {
"identity": 1695,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "COBWEB"
      }
    }
  },
  {
    "n": {
"identity": 1696,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "CLASSIT"
      }
    }
  },
  {
    "n": {
"identity": 1697,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "AutoClass"
      }
    }
  },
  {
    "n": {
"identity": 1698,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "谱聚类"
      }
    }
  },
  {
    "n": {
"identity": 1699,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "K-means改进算法"
      }
    }
  },
  {
    "n": {
"identity": 1700,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "K-means存在问题"
      }
    }
  },
  {
    "n": {
"identity": 1701,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "空簇问题"
      }
    }
  },
  {
    "n": {
"identity": 1702,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "k-means算法在实际计算啡可能会出现空簇，导致算法下一轮循环无法进行。"
      }
    }
  },
  {
    "n": {
"identity": 1703,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "离群点（孤立点）问题"
      }
    }
  },
  {
    "n": {
"identity": 1704,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "k-means算法使用误差平方和w(C)作为优化目标时，离群点可能过度影响所发现的簇质量。"
      }
    }
  },
  {
    "n": {
"identity": 1705,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "K-means改进算法"
      }
    }
  },
  {
    "n": {
"identity": 1706,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "k-modes算法"
      }
    }
  },
  {
    "n": {
"identity": 1707,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "实现对离散数据的快速聚类，保留k-means算法的效率同时将k-means的应用范围扩大到离散数据。"
      }
    }
  },
  {
    "n": {
"identity": 1708,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "度量记录之间的相似性D的计算公式"
      }
    }
  },
  {
    "n": {
"identity": 1709,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "比较两记录之间所有属性，如属性值不同则给D加1，相同则不加"
      }
    }
  },
  {
    "n": {
"identity": 1710,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "更新簇中心"
      }
    }
  },
  {
    "n": {
"identity": 1711,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "使用簇中每个属性出现频率最大的那个属性值代表簇中心的属性值"
      }
    }
  },
  {
    "n": {
"identity": 1712,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "k-prototype算法"
      }
    }
  },
  {
    "n": {
"identity": 1713,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "可以对离散与数值属性两种混合的数据进行聚类。在k-prototype中定义了一个对数值与离散属性都计算的相异性度量标准。"
      }
    }
  },
  {
    "n": {
"identity": 1714,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "混合属性的相似性D度量标准"
      }
    }
  },
  {
    "n": {
"identity": 1715,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "数值属性采用K-means算法中的度量方法得到P1，离散属性采用K-modes算法中的度量方法得到P2，那么D=P1+a*P2,a是权重。"
      }
    }
  },
  {
    "n": {
"identity": 1716,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "如果觉得离散属性重要，则增加a，否则减少a，a=0时即只有数值属性。"
      }
    }
  },
  {
    "n": {
"identity": 1717,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "更新簇中心的方法"
      }
    }
  },
  {
    "n": {
"identity": 1718,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "结合K-means与K-modes的簇中心更新方式"
      }
    }
  },
  {
    "n": {
"identity": 1719,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "k-中心点算法"
      }
    }
  },
  {
    "n": {
"identity": 1720,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "不采用簇中的平均值作为参照点，选用簇中位置最中心的对象，即中心点作为参照点。"
      }
    }
  },
  {
    "n": {
"identity": 1721,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "K-means与K-中心点对比"
      }
    }
  },
  {
    "n": {
"identity": 1722,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "两种方法有一共同的缺点，就是事先得表示K值为何。"
      }
    }
  },
  {
    "n": {
"identity": 1723,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "K-means适合处理分群数据明确集中的数据集;而对于存在噪声或者离群点的数据集，K-中心点的处理要比K-means来得好。"
      }
    }
  },
  {
    "n": {
"identity": 1724,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "K-means有一个比较大的限制是只适合于数值数据"
      }
    }
  },
  {
    "n": {
"identity": 1725,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "K-中心点相对于K-means而言计算较为复杂烦琐"
      }
    }
  },
  {
    "n": {
"identity": 1726,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "谱聚类"
      }
    }
  },
  {
    "n": {
"identity": 1727,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "谱聚类概述"
      }
    }
  },
  {
    "n": {
"identity": 1728,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "预处理"
      }
    }
  },
  {
    "n": {
"identity": 1729,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "构建代表数据集的无向图并计算相似度矩阵"
      }
    }
  },
  {
    "n": {
"identity": 1730,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "谱表示"
      }
    }
  },
  {
    "n": {
"identity": 1731,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "构造相应的拉普拉斯矩阵，并且计算拉普拉斯矩阵的特征值和特征向量，其中一个或多个特征向量构成了所有数据点在新的空间中的表示"
      }
    }
  },
  {
    "n": {
"identity": 1732,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "使用聚类算法（如K-均值)对新的数据表示进行聚类"
      }
    }
  },
  {
    "n": {
"identity": 1733,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "相似图"
      }
    }
  },
  {
    "n": {
"identity": 1734,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "E近邻图"
      }
    }
  },
  {
    "n": {
"identity": 1735,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "k近邻图"
      }
    }
  },
  {
    "n": {
"identity": 1736,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "全连接图"
      }
    }
  },
  {
    "n": {
"identity": 1737,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "拉普拉斯矩阵"
      }
    }
  },
  {
    "n": {
"identity": 1738,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "非归一化谱聚类算法"
      }
    }
  },
  {
    "n": {
"identity": 1739,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "归一化谱聚类算法"
      }
    }
  },
  {
    "n": {
"identity": 1740,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "谱聚类算法小结"
      }
    }
  },
  {
    "n": {
"identity": 1741,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "由图的拉普拉斯矩阵的特性可知这种表示加强了数据点间的聚类特性，这使得聚类可以被容易地计算。"
      }
    }
  },
  {
    "n": {
"identity": 1742,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "K-means算法在这种新的表示下就可以容易地计算出聚类结果。"
      }
    }
  },
  {
    "n": {
"identity": 1743,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "谱聚类算法有各种不同思想的支持，包括切图理论、随机游走理论、扰动理论等，背后的理论支持体系仍然有待于进一步完善。"
      }
    }
  },
  {
    "n": {
"identity": 1744,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "关联算法"
      }
    }
  },
  {
    "n": {
"identity": 1745,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "关联算法概述"
      }
    }
  },
  {
    "n": {
"identity": 1746,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "关联规则 (Association Rule)"
      }
    }
  },
  {
    "n": {
"identity": 1747,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "最初的动机是解决购物篮分析(Basket Analysis)问题，目的是发现交易数据库(Transaction Database)中不同商品之间的联系规则。"
      }
    }
  },
  {
    "n": {
"identity": 1748,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "关联规则挖掘的研究对象是交易型数据集，里面的内容是一条条交易信息。"
      }
    }
  },
  {
    "n": {
"identity": 1749,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "定义:关联规则是描述在一个交易中物品之间同时出现的规律的知识模式，更确切的说，关联规则是通过量化的数字描述物品X的出现对物品Y的出现有多大的影响。"
      }
    }
  },
  {
    "n": {
"identity": 1750,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "商品推荐"
      }
    }
  },
  {
    "n": {
"identity": 1751,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "用户行为模式挖掘"
      }
    }
  },
  {
    "n": {
"identity": 1752,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "医疗推荐可能的治疗组合"
      }
    }
  },
  {
    "n": {
"identity": 1753,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "银行推荐相关联业务"
      }
    }
  },
  {
    "n": {
"identity": 1754,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "支持度"
      }
    }
  },
  {
    "n": {
"identity": 1755,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "支持度是对关联规则重要性的衡量，反映关联是否是普遍存在的规律，体现这条规则在所有交易中有多大的代表性。记为: support(X→Y)"
      }
    }
  },
  {
    "n": {
"identity": 1756,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "置信度(Confidence)"
      }
    }
  },
  {
    "n": {
"identity": 1757,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "置信度(或可信度、信任度)是对关联规则准确度的衡量，度量关联规则的强度。即在所有出现了X的活动中出现Y的频率，说明规则X→Y的必然性有多大。记为confidence(X→Y) 。"
      }
    }
  },
  {
    "n": {
"identity": 1758,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "挖掘强关联规则基本步骤"
      }
    }
  },
  {
    "n": {
"identity": 1759,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "找频繁项集"
      }
    }
  },
  {
    "n": {
"identity": 1760,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "通过用户给定最小支持度阈值min_sup，寻找所有频繁项集，即仅保留大于或等于最小支持度阈值的项集"
      }
    }
  },
  {
    "n": {
"identity": 1761,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "生成强关联规则"
      }
    }
  },
  {
    "n": {
"identity": 1762,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "通过用户给定最小置信度阈值min_conf,在每个最大频繁项集中寻找关联规则，即删除不满足最小置信度阈值的规则。"
      }
    }
  },
  {
    "n": {
"identity": 1763,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Apriori算法"
      }
    }
  },
  {
    "n": {
"identity": 1764,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Apriori基本思想"
      }
    }
  },
  {
    "n": {
"identity": 1765,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Apriori算法的基本思路是采用层次搜索的迭代方法，由频繁(k-1)-项集来寻找候选k项集，并逐一判断产生的候选k-项集是否是频繁的。"
      }
    }
  },
  {
    "n": {
"identity": 1766,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Apriori基本步骤"
      }
    }
  },
  {
    "n": {
"identity": 1767,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基本的Apriori算法产生频繁项集的过程主要分为连接步和剪枝步两步。"
      }
    }
  },
  {
    "n": {
"identity": 1768,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Apriori特点"
      }
    }
  },
  {
    "n": {
"identity": 1769,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "多次扫描数据库"
      }
    }
  },
  {
    "n": {
"identity": 1770,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "候选项规模庞大"
      }
    }
  },
  {
    "n": {
"identity": 1771,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "计算支持度开销大"
      }
    }
  },
  {
    "n": {
"identity": 1772,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Apriori算法需要反复的生成候选项，如果项的数目比较大，候选项的数目将达到组合爆炸式的增长"
      }
    }
  },
  {
    "n": {
"identity": 1773,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "FP-Growth 算法"
      }
    }
  },
  {
    "n": {
"identity": 1774,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "频繁模式增长(FP-Growth) 算法概述"
      }
    }
  },
  {
    "n": {
"identity": 1775,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "不需要生成大量候选项集的频繁项集挖掘"
      }
    }
  },
  {
    "n": {
"identity": 1776,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "用Frequent-Pattern tree (FP-tree)结构压缩数据集,避免代价较高的数据集扫描"
      }
    }
  },
  {
    "n": {
"identity": 1777,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "算法采用分而治之的策略"
      }
    }
  },
  {
    "n": {
"identity": 1778,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "分解数据挖掘任务为小任务，用FP-tree递归增长频繁项集"
      }
    }
  },
  {
    "n": {
"identity": 1779,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "FP-Growth基本步骤"
      }
    }
  },
  {
    "n": {
"identity": 1780,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "两次扫描数据集，生成频繁模式树FP-Tree"
      }
    }
  },
  {
    "n": {
"identity": 1781,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "使用FP-Tree，生成频繁项集"
      }
    }
  },
  {
    "n": {
"identity": 1782,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "为FP-tree中的每个节点生成条件模式基;"
      }
    }
  },
  {
    "n": {
"identity": 1783,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "用条件模式基构造对应的条件FP-tree;"
      }
    }
  },
  {
    "n": {
"identity": 1784,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "FP Tree的建树过程"
      }
    }
  },
  {
    "n": {
"identity": 1785,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "先对数据集进行排序:从原始数据中剔除非频繁1项集，并按照支持数降序排列。"
      }
    }
  },
  {
    "n": {
"identity": 1786,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "读入排序后的数据集，插入FP树，插入时按照排序后的顺序，插入FP树中，排序靠前的结点是祖先结点，而靠后的是子孙结点。"
      }
    }
  },
  {
    "n": {
"identity": 1787,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "如果有共用的祖先，则对应的公用祖先结点计数加1。插入后，如果有新结点出现，则项头表对应的结点会通过结点链表链接上新结点。"
      }
    }
  },
  {
    "n": {
"identity": 1788,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "直到所有的数据都插入到FP树后，FP树的建立完成。"
      }
    }
  },
  {
    "n": {
"identity": 1789,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "建立FP-Tree"
      }
    }
  },
  {
    "n": {
"identity": 1790,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "由FP-树生成频繁项集"
      }
    }
  },
  {
    "n": {
"identity": 1791,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "生成频繁项集的步骤"
      }
    }
  },
  {
    "n": {
"identity": 1792,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "为每个节点,寻找它的所有前缀路径并记录其频度，形成条件模式基CPB"
      }
    }
  },
  {
    "n": {
"identity": 1793,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "对每个模式库"
      }
    }
  },
  {
    "n": {
"identity": 1794,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "计算库中每个项的支持度"
      }
    }
  },
  {
    "n": {
"identity": 1795,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "用模式库中的频繁项建立条件FP-tree"
      }
    }
  },
  {
    "n": {
"identity": 1796,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "FP-Growth算法总结"
      }
    }
  },
  {
    "n": {
"identity": 1797,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "扫描数据集一次，得到所有频繁1-项集的频度排序表T;"
      }
    }
  },
  {
    "n": {
"identity": 1798,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "依照T，再扫描数据集，得到FP-Tree。"
      }
    }
  },
  {
    "n": {
"identity": 1799,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "递归挖掘条件FP-tree同时增长其包含的频繁项集"
      }
    }
  },
  {
    "n": {
"identity": 1800,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "FP-Growth性能总结"
      }
    }
  },
  {
    "n": {
"identity": 1801,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "FP-growth 比Apriori快一个甚至几个数量级"
      }
    }
  },
  {
    "n": {
"identity": 1802,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "不生成候选集，不用候选测试。"
      }
    }
  },
  {
    "n": {
"identity": 1803,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "使用紧缩的数据结构"
      }
    }
  },
  {
    "n": {
"identity": 1804,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "避免重复数据集扫描"
      }
    }
  },
  {
    "n": {
"identity": 1805,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "基本操作是计数和建立FP-tree树"
      }
    }
  },
  {
    "n": {
"identity": 1806,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "FP-Growth算法优缺点"
      }
    }
  },
  {
    "n": {
"identity": 1807,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "优点"
      }
    }
  },
  {
    "n": {
"identity": 1808,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "不会打破交易中的任何模式"
      }
    }
  },
  {
    "n": {
"identity": 1809,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "包含了关联规则模式挖掘所需的全部信息"
      }
    }
  },
  {
    "n": {
"identity": 1810,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "支持度降序排列"
      }
    }
  },
  {
    "n": {
"identity": 1811,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "在发现频繁模式时，不会产生候选集，提升算法的速度"
      }
    }
  },
  {
    "n": {
"identity": 1812,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "去除不相关信息—不包含非频繁项"
      }
    }
  },
  {
    "n": {
"identity": 1813,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "缺点"
      }
    }
  },
  {
    "n": {
"identity": 1814,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "要递归生成条件模式基和条件FP-tree，所以内存开销大"
      }
    }
  },
  {
    "n": {
"identity": 1815,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "只能用于挖掘单维的关联规则"
      }
    }
  },
  {
    "n": {
"identity": 1816,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "序列模式挖掘"
      }
    }
  },
  {
    "n": {
"identity": 1817,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "时间序列相关概念"
      }
    }
  },
  {
    "n": {
"identity": 1818,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "时间序列:将某一指标在不同时间上的不同数值，按照时间先后顺序排列而成的数列。"
      }
    }
  },
  {
    "n": {
"identity": 1819,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "时间序列的建模方法"
      }
    }
  },
  {
    "n": {
"identity": 1820,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "一元时间序列:通过单变量随机过程的观察获得规律性信息。"
      }
    }
  },
  {
    "n": {
"identity": 1821,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "多元时间序列:通过多个变量描述变化规律。"
      }
    }
  },
  {
    "n": {
"identity": 1822,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "离散型时间序列:序列中的每一个序列值所对应的时间参数为间断点。"
      }
    }
  },
  {
    "n": {
"identity": 1823,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "连续型时间序列:序列中的每个序列值所对应的时间参数为连续函数。"
      }
    }
  },
  {
    "n": {
"identity": 1824,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "序列的分布规律:序列的统计特征。"
      }
    }
  },
  {
    "n": {
"identity": 1825,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "序列模式挖掘"
      }
    }
  },
  {
    "n": {
"identity": 1826,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "序列模式挖掘:从序列数据集中寻找频繁子序列作为模式的知识发现过程。"
      }
    }
  },
  {
    "n": {
"identity": 1827,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "最初动机是针对带有交易时间属性的交易数据库中发现频繁项目序列以发现某一时间段内客户的购买活动规律。"
      }
    }
  },
  {
    "n": {
"identity": 1828,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "序列模式挖掘和关联规则挖掘的区别"
      }
    }
  },
  {
    "n": {
"identity": 1829,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "序列模式是找出序列数据集中数据之间的先后顺序。"
      }
    }
  },
  {
    "n": {
"identity": 1830,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "关联规则是找出事务数据集中数据之间的并发关系。"
      }
    }
  },
  {
    "n": {
"identity": 1831,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "关联规则挖掘不关注事务之间的先后顺序,序列模式挖掘需要考虑序列间的先后顺序。"
      }
    }
  },
  {
    "n": {
"identity": 1832,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "序列模式—基本概念"
      }
    }
  },
  {
    "n": {
"identity": 1833,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "不关心前后两个事务发生的时间跨度的话，则时间事务序列可简记为S=&lt;S1,S2,…,Sn)&gt;，并称为一个序列(Sequence)。其中项集s,称为序列S的元素。"
      }
    }
  },
  {
    "n": {
"identity": 1834,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "定义2:若序列S中包含k个项，则称S为k-序列或长度为k的序列。"
      }
    }
  },
  {
    "n": {
"identity": 1835,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "一组序列中,如果某序列a不包含其他任何序列中，则称a是该组中最长序列(Maximal sequence)。"
      }
    }
  },
  {
    "n": {
"identity": 1836,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "定义4:给定序列S，序列数据集D,序列S的支持度(Support)是指S在D中相对于整个数据集元组而言所包含S的元组出现的百分比。"
      }
    }
  },
  {
    "n": {
"identity": 1837,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "支持度大于最小支持度(min-sup)的k-序列,称为DT上的频繁k-序列。"
      }
    }
  },
  {
    "n": {
"identity": 1838,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "序列模式挖掘:给定序列数据集D和用户指定的最小支持度minsup，找出支持度大于或等于minsup的所有序列"
      }
    }
  },
  {
    "n": {
"identity": 1839,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "序列模式挖掘—数据源的形式"
      }
    }
  },
  {
    "n": {
"identity": 1840,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "带交易时间的交易数据库的典型形式是由存放客户号(Customer-id) 、交易时间(Transaction-Time)以及在交易中购买的项(Item)等的交易记录表组成。"
      }
    }
  },
  {
    "n": {
"identity": 1841,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "这样的数据源需要进行形式化的整理，其中一个理想的预处理方法就是转换成顾客序列，即将一个顾客的交易按交易时间排序成项目序列。"
      }
    }
  },
  {
    "n": {
"identity": 1842,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "序列模式挖掘的一般步骤"
      }
    }
  },
  {
    "n": {
"identity": 1843,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于水平格式的Apriori类算法将序列模式挖掘过程分五个具体阶段,分别是排序阶段、大项集阶段、转换阶段、序列阶段以及选最大阶段"
      }
    }
  },
  {
    "n": {
"identity": 1844,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "排序阶段"
      }
    }
  },
  {
    "n": {
"identity": 1845,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "对数据库进行排序(Sort)，排序的结果将原始的数据库转换成序列数据库。"
      }
    }
  },
  {
    "n": {
"identity": 1846,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "大项集阶段"
      }
    }
  },
  {
    "n": {
"identity": 1847,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "这个阶段根据min_sup找出所有的频繁项集，也同步得到所有频繁1-序列组成的集合L1"
      }
    }
  },
  {
    "n": {
"identity": 1848,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "实际操作中，为了处理的方便和高效，经常将大项集映射成连续的整数。"
      }
    }
  },
  {
    "n": {
"identity": 1849,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "转换阶段"
      }
    }
  },
  {
    "n": {
"identity": 1850,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "每个事件被包含于该事件中所有频繁项集替换。"
      }
    }
  },
  {
    "n": {
"identity": 1851,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "如果一个事件不包含任何频繁项集，则将其删除。"
      }
    }
  },
  {
    "n": {
"identity": 1852,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "如果一个客户序列不包含任何频繁项集，则将该序列删除"
      }
    }
  },
  {
    "n": {
"identity": 1853,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "转换后，一个客户序列由一个频繁项集组成的集合所取代。"
      }
    }
  },
  {
    "n": {
"identity": 1854,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "序列阶段（使用不同的序列模式算法)"
      }
    }
  },
  {
    "n": {
"identity": 1855,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "利用转换后的数据库寻找频繁的序列，即大序列(Large Sequence) 。"
      }
    }
  },
  {
    "n": {
"identity": 1856,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "选最大阶段"
      }
    }
  },
  {
    "n": {
"identity": 1857,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "在大序列集中找出最长序列(MaximalSequences) 。"
      }
    }
  },
  {
    "n": {
"identity": 1858,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "序列模式挖掘经典算法"
      }
    }
  },
  {
    "n": {
"identity": 1859,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于Apriori特性的算法"
      }
    }
  },
  {
    "n": {
"identity": 1860,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Apriori算法"
      }
    }
  },
  {
    "n": {
"identity": 1861,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "AprioriSome算法"
      }
    }
  },
  {
    "n": {
"identity": 1862,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "AprioriAll算法"
      }
    }
  },
  {
    "n": {
"identity": 1863,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "DynamicSome算法"
      }
    }
  },
  {
    "n": {
"identity": 1864,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于垂直格子的算法"
      }
    }
  },
  {
    "n": {
"identity": 1865,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "SPADE算法"
      }
    }
  },
  {
    "n": {
"identity": 1866,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "增量式序列模式挖掘"
      }
    }
  },
  {
    "n": {
"identity": 1867,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "研究当序列增加时，如何维护序列模式，提高数据挖掘效率的问题"
      }
    }
  },
  {
    "n": {
"identity": 1868,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "ISM"
      }
    }
  },
  {
    "n": {
"identity": 1869,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "ISE"
      }
    }
  },
  {
    "n": {
"identity": 1870,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "IUS"
      }
    }
  },
  {
    "n": {
"identity": 1871,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "多维序列模式挖掘"
      }
    }
  },
  {
    "n": {
"identity": 1872,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Uni-Seq"
      }
    }
  },
  {
    "n": {
"identity": 1873,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Seq-Dim"
      }
    }
  },
  {
    "n": {
"identity": 1874,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Dim-Seq"
      }
    }
  },
  {
    "n": {
"identity": 1875,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于约束的序列模式挖掘"
      }
    }
  },
  {
    "n": {
"identity": 1876,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "通过添加约束条件，挖掘用户最感兴趣、最优价值的序列模式。"
      }
    }
  },
  {
    "n": {
"identity": 1877,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "序列模式挖掘需要解决的问题"
      }
    }
  },
  {
    "n": {
"identity": 1878,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "进一步提高挖掘海量数据的效率"
      }
    }
  },
  {
    "n": {
"identity": 1879,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "结合相关领域知识来解决实际问题"
      }
    }
  },
  {
    "n": {
"identity": 1880,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "进一步改进算法，应用于大数据挖掘"
      }
    }
  },
  {
    "n": {
"identity": 1884,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "强化学习"
      }
    }
  },
  {
    "n": {
"identity": 1885,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "强化学习概述"
      }
    }
  },
  {
    "n": {
"identity": 1886,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习基本概念"
      }
    }
  },
  {
    "n": {
"identity": 1887,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "TD(lmada)"
      }
    }
  },
  {
    "n": {
"identity": 1888,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "无模型学习对比"
      }
    }
  },
  {
    "n": {
"identity": 1889,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "蒙特卡洛与时序差分的比较"
      }
    }
  },
  {
    "n": {
"identity": 1890,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "在蒙特卡洛学习中，却需要一条完整的轨迹，才能估计某个状态-动作值函数，从而进行更新，导致了算法效率低下。"
      }
    }
  },
  {
    "n": {
"identity": 1891,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "在时序差分学习中，算法在每执行一步策略后就进行值函数的更新，因此效率较高。"
      }
    }
  },
  {
    "n": {
"identity": 1892,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "衡量Gt和R(t+1)+rvΠ(St+1)是否相同"
      }
    }
  },
  {
    "n": {
"identity": 1893,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "时序差分方法:分为同策略的Sarsa和异策略的Q-learning"
      }
    }
  },
  {
    "n": {
"identity": 1894,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Monte-Carlo"
      }
    }
  },
  {
    "n": {
"identity": 1895,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "要等到episode结束才能获得return"
      }
    }
  },
  {
    "n": {
"identity": 1896,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "高variance，零bias"
      }
    }
  },
  {
    "n": {
"identity": 1897,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "没有体现出马尔可夫性质"
      }
    }
  },
  {
    "n": {
"identity": 1898,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "初值不敏感"
      }
    }
  },
  {
    "n": {
"identity": 1899,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "只能使用完整的episode"
      }
    }
  },
  {
    "n": {
"identity": 1900,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Temporal Difference"
      }
    }
  },
  {
    "n": {
"identity": 1901,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "每一步执行完都能获得一个return"
      }
    }
  },
  {
    "n": {
"identity": 1902,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "低variance，有bias"
      }
    }
  },
  {
    "n": {
"identity": 1903,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "体现出了马尔可夫性质"
      }
    }
  },
  {
    "n": {
"identity": 1905,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基本概念:强化学习又称为增强学习、加强学习、再励学习或激励学习，是一种从环境状态到行为映射的学习，目的是使动作从环境中获得的累积回报值最大。强化学习是机器学习分支之一，介于监督学习和无监督学习之间。"
      }
    }
  },
  {
    "n": {
"identity": 1906,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "机器学习三大分支"
      }
    }
  },
  {
    "n": {
"identity": 1907,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "无监督学习"
      }
    }
  },
  {
    "n": {
"identity": 1908,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "监督学习"
      }
    }
  },
  {
    "n": {
"identity": 1909,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "强化学习"
      }
    }
  },
  {
    "n": {
"identity": 1910,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "强化学习技术是从控制理论、统计学、心理学等相关学科发展而来。"
      }
    }
  },
  {
    "n": {
"identity": 1911,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "在人工智能、机器学习和自动控制等领域中得到广泛研究和应用，并被认为是设计智能系统的核心技术之一。"
      }
    }
  },
  {
    "n": {
"identity": 1912,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "随着强化学习的数学基础研究取得突破性进展后，强化学习成为机器学习领域研究热点之一。"
      }
    }
  },
  {
    "n": {
"identity": 1913,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习发展历史"
      }
    }
  },
  {
    "n": {
"identity": 1914,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "1954年Minsky首次提出“强化”和“强化学习”的概念。"
      }
    }
  },
  {
    "n": {
"identity": 1915,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "1972年，Klopf把试错学习和时序差分结合在一起。1988年Sutton提出了TD算法"
      }
    }
  },
  {
    "n": {
"identity": 1916,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "1989年 Watkins提出了Q学习算法"
      }
    }
  },
  {
    "n": {
"identity": 1917,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "1994年 Rummery等提出了SARSA学习算法"
      }
    }
  },
  {
    "n": {
"identity": 1918,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "2015 Google DeepMind公司提出了深度强化学习DRL"
      }
    }
  },
  {
    "n": {
"identity": 1919,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习特点"
      }
    }
  },
  {
    "n": {
"identity": 1920,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "强化学习围绕着如何与环境交互学习，在行动—评价的环境中获得改进的行动方案，以适应环境达到预想的目的。学习者并不会被告知采取哪个动作，而只能通过尝试每个动作，获得环境对所采取动作的反馈信息，从而指导以后的行动。"
      }
    }
  },
  {
    "n": {
"identity": 1921,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "试错搜索"
      }
    }
  },
  {
    "n": {
"identity": 1922,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Agent通过尝试多个动作，搜索最优策略;"
      }
    }
  },
  {
    "n": {
"identity": 1923,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "延迟回报"
      }
    }
  },
  {
    "n": {
"identity": 1924,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "其反馈信号是延迟的而非瞬间的;"
      }
    }
  },
  {
    "n": {
"identity": 1925,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "适应性"
      }
    }
  },
  {
    "n": {
"identity": 1926,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Agent不断利用环境中的反馈信息来改善其性能;"
      }
    }
  },
  {
    "n": {
"identity": 1927,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "不依赖外部教师信号:"
      }
    }
  },
  {
    "n": {
"identity": 1928,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "因为Agent只根据反馈信号进行学习，因此不需要外部教师信号。"
      }
    }
  },
  {
    "n": {
"identity": 1929,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "强化学习过程与时间序列相关,是一个序贯决策的过程"
      }
    }
  },
  {
    "n": {
"identity": 1930,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Agent采取的动作( action )会影响到它所接受的序列数据"
      }
    }
  },
  {
    "n": {
"identity": 1931,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习基本模型"
      }
    }
  },
  {
    "n": {
"identity": 1932,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "强化学习的目的就是寻找一个最优策略，使得Agent在运行中所获得的累计期望回报最大。"
      }
    }
  },
  {
    "n": {
"identity": 1933,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "在强化学习中，Agent选择一个动作a作用于环境;"
      }
    }
  },
  {
    "n": {
"identity": 1934,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "环境接收该动作后发生变化,同时产生一个强化信号Reward(奖或罚)反馈给Agent;"
      }
    }
  },
  {
    "n": {
"identity": 1935,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Agent再根据强化信号和环境的当前状态s再选择下一个动作，选择的原则是使受到奖赏值的概率增大。"
      }
    }
  },
  {
    "n": {
"identity": 1936,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "在与环境交互之中进行学习"
      }
    }
  },
  {
    "n": {
"identity": 1937,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "强化学习模仿了这个过程，在智能主体与环境的交互中,学习能最大化收益的行动模式"
      }
    }
  },
  {
    "n": {
"identity": 1938,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习应用"
      }
    }
  },
  {
    "n": {
"identity": 1939,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "游戏"
      }
    }
  },
  {
    "n": {
"identity": 1940,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "星际争霸2"
      }
    }
  },
  {
    "n": {
"identity": 1941,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Dota2"
      }
    }
  },
  {
    "n": {
"identity": 1942,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "AlphaGo"
      }
    }
  },
  {
    "n": {
"identity": 1943,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "AlphaGo使用两种不同的深度神经网络"
      }
    }
  },
  {
    "n": {
"identity": 1944,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "第一种是策略网络，目标是选择在哪里落子。"
      }
    }
  },
  {
    "n": {
"identity": 1945,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "第二种是估值网络，作用是衡量走这一步对最终输赢的影响。"
      }
    }
  },
  {
    "n": {
"identity": 1946,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "AlphaGo成功的关键在于:"
      }
    }
  },
  {
    "n": {
"identity": 1947,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "海量对弈数据：6000万局对弈数据。"
      }
    }
  },
  {
    "n": {
"identity": 1948,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "算法创新：深度神经网络+左右手互搏"
      }
    }
  },
  {
    "n": {
"identity": 1949,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "计算能力出众：打败李世石的AlphaGo Lee 的芯片为 50 TPU（张量处理单元）,搜索速度为10k位置/秒。"
      }
    }
  },
  {
    "n": {
"identity": 1950,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "无人驾驶"
      }
    }
  },
  {
    "n": {
"identity": 1951,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "识别本车位置"
      }
    }
  },
  {
    "n": {
"identity": 1952,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "检测司机状态"
      }
    }
  },
  {
    "n": {
"identity": 1953,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "人机界面(HMI)"
      }
    }
  },
  {
    "n": {
"identity": 1954,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "识别外界"
      }
    }
  },
  {
    "n": {
"identity": 1955,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "车辆控制和功能冗余"
      }
    }
  },
  {
    "n": {
"identity": 1956,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "行动计划"
      }
    }
  },
  {
    "n": {
"identity": 1957,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "机器人控制"
      }
    }
  },
  {
    "n": {
"identity": 1958,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "聊天机器人"
      }
    }
  },
  {
    "n": {
"identity": 1959,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "制造"
      }
    }
  },
  {
    "n": {
"identity": 1960,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "能源"
      }
    }
  },
  {
    "n": {
"identity": 1961,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "交通"
      }
    }
  },
  {
    "n": {
"identity": 1962,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "物流"
      }
    }
  },
  {
    "n": {
"identity": 1963,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "商业管理"
      }
    }
  },
  {
    "n": {
"identity": 1964,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "科学工程艺术"
      }
    }
  },
  {
    "n": {
"identity": 1965,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "金融"
      }
    }
  },
  {
    "n": {
"identity": 1966,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "计算机系统"
      }
    }
  },
  {
    "n": {
"identity": 1967,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "医疗"
      }
    }
  },
  {
    "n": {
"identity": 1968,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "教育"
      }
    }
  },
  {
    "n": {
"identity": 1969,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习分类"
      }
    }
  },
  {
    "n": {
"identity": 1970,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Model-free RL(不理解环境)"
      }
    }
  },
  {
    "n": {
"identity": 1971,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Model-based RL (理解环境)"
      }
    }
  },
  {
    "n": {
"identity": 1972,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于策略(Policy-Based RL)"
      }
    }
  },
  {
    "n": {
"identity": 1973,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于值(Value-based RL)"
      }
    }
  },
  {
    "n": {
"identity": 1974,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "在线学习(On-policy)"
      }
    }
  },
  {
    "n": {
"identity": 1975,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "离线学习(Off-policy)"
      }
    }
  },
  {
    "n": {
"identity": 1976,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "回合更新(Monte-Carlo update)"
      }
    }
  },
  {
    "n": {
"identity": 1977,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "单步更新(Temporal-Difference update)"
      }
    }
  },
  {
    "n": {
"identity": 1978,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "从广义上讲，强化学习是解决序贯决策问题的方法之一，将强化学习纳入马尔科夫决策过程的框架后，可以分为基于模型的动态规划方法和基于无模型的强化学习方法。"
      }
    }
  },
  {
    "n": {
"identity": 1979,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习基本流程"
      }
    }
  },
  {
    "n": {
"identity": 1980,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "问题定义"
      }
    }
  },
  {
    "n": {
"identity": 1981,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "定义强化学习问题。定义环境、智能体、状态、动作、奖赏这些核心元素。"
      }
    }
  },
  {
    "n": {
"identity": 1982,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据准备"
      }
    }
  },
  {
    "n": {
"identity": 1983,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据准备，收集数据，预处理。"
      }
    }
  },
  {
    "n": {
"identity": 1984,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "特征工程"
      }
    }
  },
  {
    "n": {
"identity": 1985,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "特征工程，一般根据领域知识手动生成，也可能以端到端的方式自动产生。"
      }
    }
  },
  {
    "n": {
"identity": 1986,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "表征选择"
      }
    }
  },
  {
    "n": {
"identity": 1987,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "选择表征方式，有深度神经元网络、其它非线性、线性、甚至表格等表征方式。"
      }
    }
  },
  {
    "n": {
"identity": 1988,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "算法选择"
      }
    }
  },
  {
    "n": {
"identity": 1989,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "选择算法，根据问题选择几种算法。"
      }
    }
  },
  {
    "n": {
"identity": 1990,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "实验调优"
      }
    }
  },
  {
    "n": {
"identity": 1991,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "实验、调优系统;可能要多次迭代前面几步。"
      }
    }
  },
  {
    "n": {
"identity": 1992,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "部署调优"
      }
    }
  },
  {
    "n": {
"identity": 1993,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "部署、调优系统。可能要多次迭代前面几步。"
      }
    }
  },
  {
    "n": {
"identity": 1994,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习参考资料"
      }
    }
  },
  {
    "n": {
"identity": 1995,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Sutton & Barto RL强化学习教科书《Reinforcement Learning: An Introduction"
      }
    }
  },
  {
    "n": {
"identity": 1996,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "http://www.incompleteideas.net/book/the-book-2nd.html"
      }
    }
  },
  {
    "n": {
"identity": 1997,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "David Silver强化学习课程"
      }
    }
  },
  {
    "n": {
"identity": 1998,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "http://www0.cs.ucl.ac.uk/staff/D.Silver/web/Teaching.html"
      }
    }
  },
  {
    "n": {
"identity": 1999,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "阿尔伯塔大学在Coursera上的强化学习课"
      }
    }
  },
  {
    "n": {
"identity": 2000,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "https://www.coursera.org/specializations/reinforcement-learning"
      }
    }
  },
  {
    "n": {
"identity": 2001,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "DeepMind & UCL 的深度学习与强化学习课程，https://www.youtube.com/playlist?list=PLqYmG7hTraZDNJre23vqCGIVpfZ_K2RZs"
      }
    }
  },
  {
    "n": {
"identity": 2002,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "UC Berkeley深度强化学习课程，http://rail.eecs.berkeley.edu/deeprlcourse/"
      }
    }
  },
  {
    "n": {
"identity": 2003,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "台湾大学李宏毅深度强化字习教程https://www.bilibili.com/video/av63546968"
      }
    }
  },
  {
    "n": {
"identity": 2004,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "莫烦强化学习教程"
      }
    }
  },
  {
    "n": {
"identity": 2005,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "https://morvanzhou.github.io/tutorials/machine-learning/reinforcement-learning/"
      }
    }
  },
  {
    "n": {
"identity": 2006,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "OpenAI Spinning Up"
      }
    }
  },
  {
    "n": {
"identity": 2007,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "https://blog.openai.com/spinning-up-in-deep-rl/"
      }
    }
  },
  {
    "n": {
"identity": 2008,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "强化学习速查表"
      }
    }
  },
  {
    "n": {
"identity": 2009,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "https://github.com/udacity/rl-cheatsheet"
      }
    }
  },
  {
    "n": {
"identity": 2010,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "马尔可夫决策过程"
      }
    }
  },
  {
    "n": {
"identity": 2011,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "马尔可夫性Markov property"
      }
    }
  },
  {
    "n": {
"identity": 2012,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "系统的下一个状态st+1仅与当前状态st有关，而与以前的状态无关。"
      }
    }
  },
  {
    "n": {
"identity": 2013,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "现在决定未来，未来与过去无关"
      }
    }
  },
  {
    "n": {
"identity": 2014,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "马尔可夫过程Markov process"
      }
    }
  },
  {
    "n": {
"identity": 2015,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "马尔科夫过程是一个二元组(S,P)，且满足∶S是有限状态集合，P是状态转移概率。"
      }
    }
  },
  {
    "n": {
"identity": 2016,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "马尔可夫决策过程——MDP"
      }
    }
  },
  {
    "n": {
"identity": 2017,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "马尔科夫决策过程由元组(S,A,P,R,y)描述"
      }
    }
  },
  {
    "n": {
"identity": 2018,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "S为有限的状态集"
      }
    }
  },
  {
    "n": {
"identity": 2019,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "A为有限的动作集"
      }
    }
  },
  {
    "n": {
"identity": 2020,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Р为状态转移概率"
      }
    }
  },
  {
    "n": {
"identity": 2021,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "R为回报函数"
      }
    }
  },
  {
    "n": {
"identity": 2022,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "r为折扣因子，用来计算累积汇报。"
      }
    }
  },
  {
    "n": {
"identity": 2023,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "与马尔科夫过程不同，其状态转移概率包含动作"
      }
    }
  },
  {
    "n": {
"identity": 2024,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "策略常用Π表示，是给定状态s时，动作集上的概率分布"
      }
    }
  },
  {
    "n": {
"identity": 2025,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "目标:找到最优策略——最优即得到的总回报最大"
      }
    }
  },
  {
    "n": {
"identity": 2026,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "(折扣)累积回报"
      }
    }
  },
  {
    "n": {
"identity": 2027,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "状态值函数"
      }
    }
  },
  {
    "n": {
"identity": 2028,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "状态-动作值函数"
      }
    }
  },
  {
    "n": {
"identity": 2029,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "由状态值函数和状态-动作值函数以及累积回报可得"
      }
    }
  },
  {
    "n": {
"identity": 2030,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "状态值函数的贝尔曼方程"
      }
    }
  },
  {
    "n": {
"identity": 2031,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "状态-动作值的贝尔曼方程"
      }
    }
  },
  {
    "n": {
"identity": 2032,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "有模型学习"
      }
    }
  },
  {
    "n": {
"identity": 2033,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "有模型学习概述"
      }
    }
  },
  {
    "n": {
"identity": 2034,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "定义:在已知模型的环境中学习，称为“有模型学习”，也即，对于多步强化学习任务，其对应的马尔可夫决策过程四元组表示&lt;S,A,R,P&gt;均为已知，称为“模型已知”。"
      }
    }
  },
  {
    "n": {
"identity": 2035,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "S:环境的状态空间"
      }
    }
  },
  {
    "n": {
"identity": 2036,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "A: agent可选择的动作空间"
      }
    }
  },
  {
    "n": {
"identity": 2037,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "R(s, a):奖励函数，返回的值表示在状态下执行a动作的奖励"
      }
    }
  },
  {
    "n": {
"identity": 2038,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "P(s^|s, a):状态转移概率函数，表示从s状态执行a动作后环境转移至s’状态的概率"
      }
    }
  },
  {
    "n": {
"identity": 2039,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "目标:找到一个策略n能够最大化我们的对未来奖励的期望"
      }
    }
  },
  {
    "n": {
"identity": 2040,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "策略迭代算法"
      }
    }
  },
  {
    "n": {
"identity": 2041,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "策略迭代过程"
      }
    }
  },
  {
    "n": {
"identity": 2042,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "策略评估"
      }
    }
  },
  {
    "n": {
"identity": 2043,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "在当前的策略中更新各状态的值函数，如果达到迭代次数或者值函数收敛就不再迭代"
      }
    }
  },
  {
    "n": {
"identity": 2044,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "策略更新"
      }
    }
  },
  {
    "n": {
"identity": 2045,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "基于当前值函数得到最优策略"
      }
    }
  },
  {
    "n": {
"identity": 2046,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "策略迭代算法流程"
      }
    }
  },
  {
    "n": {
"identity": 2047,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "某一个随机策略作为初始策略"
      }
    }
  },
  {
    "n": {
"identity": 2048,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "策略评价+策略改进+策略评价+策略改进+……"
      }
    }
  },
  {
    "n": {
"identity": 2049,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "若满足收敛条件，则退出，否则，转入2"
      }
    }
  },
  {
    "n": {
"identity": 2050,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "策略迭代算法的缺点在于:每次改进策略后都需要重新进行策略评价，计算比较耗时。"
      }
    }
  },
  {
    "n": {
"identity": 2051,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "值迭代算法"
      }
    }
  },
  {
    "n": {
"identity": 2052,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "值迭代算法概述"
      }
    }
  },
  {
    "n": {
"identity": 2053,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "值迭代算法:基于策略迭代的方法是交替进行策略评价和策略改进，其中策略评价中需要迭代多次，以保证当前策略评价收敛。因此，算法收敛较慢。为了解决该问题,提出了值迭代算法。"
      }
    }
  },
  {
    "n": {
"identity": 2054,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "每次值迭代都找到让当前值函数最大的更新方式，并且用这种方式更新值函数。直到值函数不再变化。"
      }
    }
  },
  {
    "n": {
"identity": 2055,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "策略迭代与值迭代"
      }
    }
  },
  {
    "n": {
"identity": 2056,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "策略迭代是累计平均的计算方式，值迭代是单步最好的方式。"
      }
    }
  },
  {
    "n": {
"identity": 2057,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "值迭代速度更快，尤其是在策略空间较大的时候。"
      }
    }
  },
  {
    "n": {
"identity": 2058,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "策略迭代更接近于样本的真实分布。"
      }
    }
  },
  {
    "n": {
"identity": 2059,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "有模型学习小结"
      }
    }
  },
  {
    "n": {
"identity": 2060,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "策略评估"
      }
    }
  },
  {
    "n": {
"identity": 2061,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "根据给定策略，由贝尔曼期望方程迭代更新值函数。"
      }
    }
  },
  {
    "n": {
"identity": 2062,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "预测"
      }
    }
  },
  {
    "n": {
"identity": 2063,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "策略迭代"
      }
    }
  },
  {
    "n": {
"identity": 2064,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "（策略评估+贪婪策略改进）"
      }
    }
  },
  {
    "n": {
"identity": 2065,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "随机初始化策略，交替根据贝尔曼期望方程更新值函数和根据值函数改进当前策略两个步骤。"
      }
    }
  },
  {
    "n": {
"identity": 2066,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "控制"
      }
    }
  },
  {
    "n": {
"identity": 2067,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "值迭代"
      }
    }
  },
  {
    "n": {
"identity": 2068,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "使用贝尔曼最优方程更新值函数。"
      }
    }
  },
  {
    "n": {
"identity": 2069,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "探索与利用"
      }
    }
  },
  {
    "n": {
"identity": 2070,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "探索:是指做你以前从来没有做过的事情，以期望获得更高的回报。"
      }
    }
  },
  {
    "n": {
"identity": 2071,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "利用:是指做你当前知道的能产生最大回报的事情。"
      }
    }
  },
  {
    "n": {
"identity": 2072,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "最常用的策略E - greedy"
      }
    }
  },
  {
    "n": {
"identity": 2073,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "E-贪心策略的基本思想是通过E-判别函数分配强化学习过程中利用现有策略和进行环境探索之间的比例。"
      }
    }
  },
  {
    "n": {
"identity": 2074,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "进行环境探索时在动作状态空间中随机选择某个动作，利用现有策略则直接选择使得当前值函数取值最大的动作。"
      }
    }
  },
  {
    "n": {
"identity": 2075,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "好处"
      }
    }
  },
  {
    "n": {
"identity": 2076,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "计算容易，不需要复杂的计算公式。"
      }
    }
  },
  {
    "n": {
"identity": 2077,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "能保证充分探索所有状态。"
      }
    }
  },
  {
    "n": {
"identity": 2078,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "坏处"
      }
    }
  },
  {
    "n": {
"identity": 2079,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "家搠去.数据利用率低。"
      }
    }
  },
  {
    "n": {
"identity": 2080,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "需要无限长时间（取决于状态的数量以及∈大小)。"
      }
    }
  },
  {
    "n": {
"identity": 2081,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "其他策略"
      }
    }
  },
  {
    "n": {
"identity": 2082,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Boltzmann strategy"
      }
    }
  },
  {
    "n": {
"identity": 2083,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Gaussian strategy"
      }
    }
  },
  {
    "n": {
"identity": 2084,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "无模型学习"
      }
    }
  },
  {
    "n": {
"identity": 2085,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "无模型学习概述"
      }
    }
  },
  {
    "n": {
"identity": 2086,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "当模型未知，即状态转移概率、奖赏函数往往我们是不知道的，甚至很难知道环境中一共有多少状态。此时我们无法直接利用Bellman方程来求解得到最优策略。"
      }
    }
  },
  {
    "n": {
"identity": 2087,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "若学习算法不依赖环境建模，则称为“无模型学习”,或称模型无关的学习(Model-free Learning) 。"
      }
    }
  },
  {
    "n": {
"identity": 2088,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "模型无关的强化学习，是在不知道马尔科夫决策过程的情况下学习到最优策略。模型无关的策略学习主要有两种算法:蒙塔卡洛强化学习，时序差分强化学习。而时序差分强化学习又包括SARSA和Q-learning两种算法。"
      }
    }
  },
  {
    "n": {
"identity": 2089,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "蒙特卡洛采样"
      }
    }
  },
  {
    "n": {
"identity": 2090,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "蒙特卡洛采样概述"
      }
    }
  },
  {
    "n": {
"identity": 2091,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "MDP是通过5元组:&lt;S,P,A，R,y&gt;来做决策的。对于这种已知模型的情况，也就是知道了这个5元组，我们可以通过求解贝尔曼方程获得奖赏最大化。"
      }
    }
  },
  {
    "n": {
"identity": 2092,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "但是，在现实世界中，我们无法同时知道这个5元组。比如状态转移概率就很难知道，我们无法使用bellman方程来求解V和Q值。"
      }
    }
  },
  {
    "n": {
"identity": 2093,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "一个想法是，虽然我不知道状态转移概率P，但是这个概率是真实存在的。我们可以直接去尝试，不断采样，然后会得到奖赏，通过奖赏来评价值函数。"
      }
    }
  },
  {
    "n": {
"identity": 2094,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "由于智能体和环境交互的模型是未知的，蒙特卡洛方法是利用经验平均来估计值函数，而能否得到正确的值函数，取决于经验，因此，如何获得充足的经验是无模型强化学习的核心所在。"
      }
    }
  },
  {
    "n": {
"identity": 2095,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "通常情况下某个状态的价值等于在多个episode中以该状态算得到的所有奖励的平均。"
      }
    }
  },
  {
    "n": {
"identity": 2096,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Model-free方法"
      }
    }
  },
  {
    "n": {
"identity": 2097,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "每条episode就是一条从起始状态到结束状态的经历。"
      }
    }
  },
  {
    "n": {
"identity": 2098,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "蒙特卡洛方法Monte Carlo"
      }
    }
  },
  {
    "n": {
"identity": 2099,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "First-visit"
      }
    }
  },
  {
    "n": {
"identity": 2100,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "在计算状态s处的值函数时，只利用每个episode中第一次访问到状态s时返回的值。"
      }
    }
  },
  {
    "n": {
"identity": 2101,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Every-visit"
      }
    }
  },
  {
    "n": {
"identity": 2102,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "在计算状态s处的值函数时，利用所有访问到状态s时的奖励返回值。"
      }
    }
  },
  {
    "n": {
"identity": 2103,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "时序差分算法"
      }
    }
  },
  {
    "n": {
"identity": 2104,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "蒙特卡洛需要等到整个episode结束才能更新"
      }
    }
  },
  {
    "n": {
"identity": 2105,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "蒙特卡洛需要大量的episode才能得到较为准确的结果"
      }
    }
  },
  {
    "n": {
"identity": 2106,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "如何不使用完整episode，实现单步更新?"
      }
    }
  },
  {
    "n": {
"identity": 2107,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "TD(0)算法"
      }
    }
  },
  {
    "n": {
"identity": 2108,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "那么n为多少时，效果最好?"
      }
    }
  },
  {
    "n": {
"identity": 2109,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "引入lmada来综合所有的步数"
      }
    }
  },
  {
    "n": {
"identity": 2125,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "初值敏感"
      }
    }
  },
  {
    "n": {
"identity": 2126,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "可以使用不完整的episode"
      }
    }
  },
  {
    "n": {
"identity": 2127,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Q-learning"
      }
    }
  },
  {
    "n": {
"identity": 2128,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Q-learning——逃离密室"
      }
    }
  },
  {
    "n": {
"identity": 2129,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "学习率看作是保留多少旧值、生成新值的度量。如果学习率越大，新估计值代替旧估值的比例越大。"
      }
    }
  },
  {
    "n": {
"identity": 2130,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "学习率为1时新估值完全代替旧值，旧Q值被完全抛弃"
      }
    }
  },
  {
    "n": {
"identity": 2131,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Sarsa"
      }
    }
  },
  {
    "n": {
"identity": 2132,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于单步更新方式的时序差分学习算法为Sarsa算法"
      }
    }
  },
  {
    "n": {
"identity": 2133,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "在Sarsa算法中，选择动作时遵循的策略和更新动作值函数时遵循的策略是相同的，均为E-贪心策略"
      }
    }
  },
  {
    "n": {
"identity": 2134,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "对强化学习的理解"
      }
    }
  },
  {
    "n": {
"identity": 2135,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习在某种意义上可看作具有“延迟标记信息”的监督学习问题。"
      }
    }
  },
  {
    "n": {
"identity": 2136,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习可以分为基于模型的方法与无模型的方法。前者发展主要来自最优控制领域。而后者发展更多的来自机器学习领域。无模型的强化学习算法通过大量采样，估计智能体的状态--动作值函数或回报函数，从而获得最优的策略。"
      }
    }
  },
  {
    "n": {
"identity": 2137,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "无模型的强化学习可能面临的一些问题"
      }
    }
  },
  {
    "n": {
"identity": 2138,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "奖励函数难以设计，缺乏理论指导。"
      }
    }
  },
  {
    "n": {
"identity": 2139,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "不对具体问题进行建模，而是尝试用一个通用的算法解决所有问题，没有利用问题固有的信息。"
      }
    }
  },
  {
    "n": {
"identity": 2140,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "因为没有模型，解释性不强，调试困难。"
      }
    }
  },
  {
    "n": {
"identity": 2141,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "深度学习(DL)技术和强化学习(RL)的结合，形成了深度强化学习(DRL)，迅速成为人工智能界的焦点。"
      }
    }
  },
  {
    "n": {
"identity": 2142,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "在视频游戏、棋类游戏、机器人控制等领域取得了巨大成功。"
      }
    }
  },
  {
    "n": {
"identity": 2143,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "可能面临的问题"
      }
    }
  },
  {
    "n": {
"identity": 2144,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "难以平衡“探索”和“利用”,以致算法陷入局部极小"
      }
    }
  },
  {
    "n": {
"identity": 2145,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "对环境容易出现过拟合;"
      }
    }
  },
  {
    "n": {
"identity": 2146,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "灾难性的不稳定性。"
      }
    }
  },
  {
    "n": {
"identity": 2147,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "样本利用较低;"
      }
    }
  },
  {
    "n": {
"identity": 2148,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "潜在的研究方向包括"
      }
    }
  },
  {
    "n": {
"identity": 2149,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "提高无模型方法的数据利用率和扩展性;"
      }
    }
  },
  {
    "n": {
"identity": 2150,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "设计高效的探索策略。平衡“探索”与“利用”;"
      }
    }
  },
  {
    "n": {
"identity": 2151,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "与模仿学习结合，既能更快地得到反馈、又能更快地收敛;"
      }
    }
  },
  {
    "n": {
"identity": 2152,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "混合迁移学习和多任务学习。当前强化的采样效率较低，而且学到的知识不通用，迁移学习与多任务学习可以有效解决这些问题。"
      }
    }
  },
  {
    "n": {
"identity": 2153,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "探索好的奖励机制。奖励机制对强化学习算法性能的影响是巨大的，因此该方向一直是强化学习的研究热点。"
      }
    }
  },
  {
    "n": {
"identity": 2154,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习的目的是使得智能体一系列的动作满足任务需求，能够综合考虑一段时间内智能体的相关动作是否能得到最优的回报,根据累计回报确定最优策略。然而，强化学习在解决序贯决策问题也面临着如下挑战:"
      }
    }
  },
  {
    "n": {
"identity": 2155,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "收敛速度慢"
      }
    }
  },
  {
    "n": {
"identity": 2156,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "收敛速度慢与维数灾难问题有着密切的关系。多数强化学习算法收敛到最优解的理论保障都是建立在任意状态都能被无限次访问到这个前提条件之上。"
      }
    }
  },
  {
    "n": {
"identity": 2157,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "当问题环境比较复杂或出现维数灾难问题时，智能体的探索策略不能保证每个状态都能在有限的时间内被访问足够多的次数，因而智能体没有足够经验能够在这些较少遇到的状态下做出正确决策,导致算法的收敛速度较慢。"
      }
    }
  },
  {
    "n": {
"identity": 2158,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "时间权重分配"
      }
    }
  },
  {
    "n": {
"identity": 2159,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "强化学习会经常面临利用已经学到知识还是对未知知识进行探索的平衡难题。产生这个问题的根源在于难以权衡长期利益和短期利益。"
      }
    }
  },
  {
    "n": {
"identity": 2160,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "一方面为了获得较高的奖赏，智能体需要利用学到的经验在已经探索过的动作中贪心地选择一个获益最大的动作;"
      }
    }
  },
  {
    "n": {
"identity": 2161,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "另一方面，为了发现更好的策略，智能体需要扩大探索范围，尝试以前没有或较少试过的动作。若不能权衡好两者的关系，智能体就处于进退两难境地。"
      }
    }
  },
  {
    "n": {
"identity": 2162,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "探索未知和利用已知的平衡"
      }
    }
  },
  {
    "n": {
"identity": 2163,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "由于强化学习具有回报延迟的特点，即环境反馈给智能体的信息比较稀疏且有一定延时，故当智能体收到一个奖赏信号时，决定先前的哪些行为应分配到多大权重有时比较困难。"
      }
    }
  },
  {
    "n": {
"identity": 2164,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "例如，某篮球队若在比赛最后一刻压哨绝杀获得比赛胜利，则难以量化计算之前的每个决策对于这个胜利结果究竟做出多少贡献。"
      }
    }
  },
  {
    "n": {
"identity": 2165,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2166,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "神经元"
      }
    }
  },
  {
    "n": {
"identity": 2167,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "激活函数"
      }
    }
  },
  {
    "n": {
"identity": 2168,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "饱和激活函数"
      }
    }
  },
  {
    "n": {
"identity": 2169,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "sigmoid函数"
      }
    }
  },
  {
    "n": {
"identity": 2170,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "tanh函数"
      }
    }
  },
  {
    "n": {
"identity": 2171,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "非饱和激活函数"
      }
    }
  },
  {
    "n": {
"identity": 2172,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "ReLU函数"
      }
    }
  },
  {
    "n": {
"identity": 2173,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Leaky ReLU函数"
      }
    }
  },
  {
    "n": {
"identity": 2174,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "PReLU函数"
      }
    }
  },
  {
    "n": {
"identity": 2175,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "ELU函数"
      }
    }
  },
  {
    "n": {
"identity": 2176,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "网络结构"
      }
    }
  },
  {
    "n": {
"identity": 2177,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "前馈网络"
      }
    }
  },
  {
    "n": {
"identity": 2178,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "记忆网络"
      }
    }
  },
  {
    "n": {
"identity": 2179,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "图网络"
      }
    }
  },
  {
    "n": {
"identity": 2180,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "前馈神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2181,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "信息传播方式"
      }
    }
  },
  {
    "n": {
"identity": 2182,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "前向传播"
      }
    }
  },
  {
    "n": {
"identity": 2183,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "信息传播公式"
      }
    }
  },
  {
    "n": {
"identity": 2184,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "通用近似定理"
      }
    }
  },
  {
    "n": {
"identity": 2185,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "前馈网络的参数学习"
      }
    }
  },
  {
    "n": {
"identity": 2186,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "损失函数"
      }
    }
  },
  {
    "n": {
"identity": 2187,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "结构化风险函数"
      }
    }
  },
  {
    "n": {
"identity": 2188,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "梯度下降"
      }
    }
  },
  {
    "n": {
"identity": 2189,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "反向传播算法"
      }
    }
  },
  {
    "n": {
"identity": 2190,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "优化问题"
      }
    }
  },
  {
    "n": {
"identity": 2191,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "非凸优化问题"
      }
    }
  },
  {
    "n": {
"identity": 2192,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "梯度消失问题"
      }
    }
  },
  {
    "n": {
"identity": 2193,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "卷积神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2194,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "卷积"
      }
    }
  },
  {
    "n": {
"identity": 2195,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "卷积核"
      }
    }
  },
  {
    "n": {
"identity": 2196,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "一维卷积"
      }
    }
  },
  {
    "n": {
"identity": 2197,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "二维卷积"
      }
    }
  },
  {
    "n": {
"identity": 2198,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "卷积神经网络结构"
      }
    }
  },
  {
    "n": {
"identity": 2199,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "卷积层"
      }
    }
  },
  {
    "n": {
"identity": 2200,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "特征映射"
      }
    }
  },
  {
    "n": {
"identity": 2201,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "汇聚层"
      }
    }
  },
  {
    "n": {
"identity": 2202,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "汇聚层作用"
      }
    }
  },
  {
    "n": {
"identity": 2203,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "汇聚函数"
      }
    }
  },
  {
    "n": {
"identity": 2204,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "最大汇聚"
      }
    }
  },
  {
    "n": {
"identity": 2205,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "平均汇聚"
      }
    }
  },
  {
    "n": {
"identity": 2206,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "经典卷积网络"
      }
    }
  },
  {
    "n": {
"identity": 2207,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "LeNet-5"
      }
    }
  },
  {
    "n": {
"identity": 2208,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "残差网络"
      }
    }
  },
  {
    "n": {
"identity": 2209,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "循环神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2210,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "具有短期记忆能力的网络"
      }
    }
  },
  {
    "n": {
"identity": 2211,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "延时神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2212,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "延时器"
      }
    }
  },
  {
    "n": {
"identity": 2213,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "活性值"
      }
    }
  },
  {
    "n": {
"identity": 2214,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "自回归模型"
      }
    }
  },
  {
    "n": {
"identity": 2215,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "简单循环网络"
      }
    }
  },
  {
    "n": {
"identity": 2216,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "循环网络结构"
      }
    }
  },
  {
    "n": {
"identity": 2217,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "自反馈"
      }
    }
  },
  {
    "n": {
"identity": 2218,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "隐藏层"
      }
    }
  },
  {
    "n": {
"identity": 2219,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "隐状态"
      }
    }
  },
  {
    "n": {
"identity": 2220,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "隐状态更新"
      }
    }
  },
  {
    "n": {
"identity": 2221,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "循环神经网络的通用近似定理"
      }
    }
  },
  {
    "n": {
"identity": 2222,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "图灵完备"
      }
    }
  },
  {
    "n": {
"identity": 2223,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "循环神经网络的作用"
      }
    }
  },
  {
    "n": {
"identity": 2224,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "序列到类别模式"
      }
    }
  },
  {
    "n": {
"identity": 2225,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "序列分类任务"
      }
    }
  },
  {
    "n": {
"identity": 2226,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "同步的序列到序列模式"
      }
    }
  },
  {
    "n": {
"identity": 2227,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "序列标注任务"
      }
    }
  },
  {
    "n": {
"identity": 2228,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "词性标注"
      }
    }
  },
  {
    "n": {
"identity": 2229,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "异步的序列到序列模式"
      }
    }
  },
  {
    "n": {
"identity": 2230,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "循环网络的参数学习"
      }
    }
  },
  {
    "n": {
"identity": 2231,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "随时间反向传播算法"
      }
    }
  },
  {
    "n": {
"identity": 2232,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "实时循环学习算法"
      }
    }
  },
  {
    "n": {
"identity": 2233,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "长程依赖问题"
      }
    }
  },
  {
    "n": {
"identity": 2234,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "梯度爆炸问题"
      }
    }
  },
  {
    "n": {
"identity": 2235,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "基于门控的循环网络"
      }
    }
  },
  {
    "n": {
"identity": 2236,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "长短期记忆网络"
      }
    }
  },
  {
    "n": {
"identity": 2237,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "长短期记忆网络的单元结构"
      }
    }
  },
  {
    "n": {
"identity": 2238,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "内部状态"
      }
    }
  },
  {
    "n": {
"identity": 2239,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "候选状态"
      }
    }
  },
  {
    "n": {
"identity": 2240,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "外部状态"
      }
    }
  },
  {
    "n": {
"identity": 2241,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "门控机制"
      }
    }
  },
  {
    "n": {
"identity": 2242,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "输入门"
      }
    }
  },
  {
    "n": {
"identity": 2243,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "遗忘门"
      }
    }
  },
  {
    "n": {
"identity": 2244,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "输出门"
      }
    }
  },
  {
    "n": {
"identity": 2245,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "记忆"
      }
    }
  },
  {
    "n": {
"identity": 2246,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "短期记忆"
      }
    }
  },
  {
    "n": {
"identity": 2247,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "长期记忆"
      }
    }
  },
  {
    "n": {
"identity": 2248,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "长短期记忆"
      }
    }
  },
  {
    "n": {
"identity": 2249,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "长短期记忆网络的变体"
      }
    }
  },
  {
    "n": {
"identity": 2250,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "无遗忘门的LSTM网络"
      }
    }
  },
  {
    "n": {
"identity": 2251,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "门控循环单元网络"
      }
    }
  },
  {
    "n": {
"identity": 2252,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "深层循环神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2253,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "堆叠循环神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2254,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "双向循环神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2255,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "网络优化与正则化"
      }
    }
  },
  {
    "n": {
"identity": 2256,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "网络优化"
      }
    }
  },
  {
    "n": {
"identity": 2257,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "网络结构多样性"
      }
    }
  },
  {
    "n": {
"identity": 2258,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "高维变量的非凸优化"
      }
    }
  },
  {
    "n": {
"identity": 2259,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "鞍点"
      }
    }
  },
  {
    "n": {
"identity": 2260,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "平坦最小值"
      }
    }
  },
  {
    "n": {
"identity": 2261,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "优化算法"
      }
    }
  },
  {
    "n": {
"identity": 2262,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "调整学习率"
      }
    }
  },
  {
    "n": {
"identity": 2263,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "学习率衰减"
      }
    }
  },
  {
    "n": {
"identity": 2264,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "分段常数衰减"
      }
    }
  },
  {
    "n": {
"identity": 2265,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "逆时衰减"
      }
    }
  },
  {
    "n": {
"identity": 2266,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "指数衰减"
      }
    }
  },
  {
    "n": {
"identity": 2267,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "自然指数衰减"
      }
    }
  },
  {
    "n": {
"identity": 2268,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "余弦衰减"
      }
    }
  },
  {
    "n": {
"identity": 2269,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "学习率预热"
      }
    }
  },
  {
    "n": {
"identity": 2270,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "周期性学习率调整"
      }
    }
  },
  {
    "n": {
"identity": 2271,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "梯度估计修正"
      }
    }
  },
  {
    "n": {
"identity": 2272,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "动量法"
      }
    }
  },
  {
    "n": {
"identity": 2273,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Nesterov董良发"
      }
    }
  },
  {
    "n": {
"identity": 2274,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Adam算法"
      }
    }
  },
  {
    "n": {
"identity": 2275,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "梯度截断"
      }
    }
  },
  {
    "n": {
"identity": 2276,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "参数初始化"
      }
    }
  },
  {
    "n": {
"identity": 2277,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "预训练初始化"
      }
    }
  },
  {
    "n": {
"identity": 2278,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "随机初始化"
      }
    }
  },
  {
    "n": {
"identity": 2279,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "固定值初始化"
      }
    }
  },
  {
    "n": {
"identity": 2280,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "逐层归一化"
      }
    }
  },
  {
    "n": {
"identity": 2281,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "批量归一化"
      }
    }
  },
  {
    "n": {
"identity": 2282,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "层归一化"
      }
    }
  },
  {
    "n": {
"identity": 2283,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "权重归一化"
      }
    }
  },
  {
    "n": {
"identity": 2284,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "局部响应归一化"
      }
    }
  },
  {
    "n": {
"identity": 2285,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "超参数优化"
      }
    }
  },
  {
    "n": {
"identity": 2286,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "网格搜索"
      }
    }
  },
  {
    "n": {
"identity": 2287,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "随机搜索"
      }
    }
  },
  {
    "n": {
"identity": 2288,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "贝叶斯优化"
      }
    }
  },
  {
    "n": {
"identity": 2289,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "动态资源分配"
      }
    }
  },
  {
    "n": {
"identity": 2290,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "神经架构搜索"
      }
    }
  },
  {
    "n": {
"identity": 2291,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "网络正则化"
      }
    }
  },
  {
    "n": {
"identity": 2292,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "注意力机制与外部记忆"
      }
    }
  },
  {
    "n": {
"identity": 2293,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "注意力机制"
      }
    }
  },
  {
    "n": {
"identity": 2294,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "软性注意力机制"
      }
    }
  },
  {
    "n": {
"identity": 2295,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "注意力分布"
      }
    }
  },
  {
    "n": {
"identity": 2296,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "注意力打分函数"
      }
    }
  },
  {
    "n": {
"identity": 2297,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "硬性注意力"
      }
    }
  },
  {
    "n": {
"identity": 2298,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "键值对注意力"
      }
    }
  },
  {
    "n": {
"identity": 2299,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "多头注意力"
      }
    }
  },
  {
    "n": {
"identity": 2300,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "结构化注意力"
      }
    }
  },
  {
    "n": {
"identity": 2301,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "自注意力模型"
      }
    }
  },
  {
    "n": {
"identity": 2302,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "记忆增强神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2303,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "外部记忆"
      }
    }
  },
  {
    "n": {
"identity": 2304,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "端到端记忆网络"
      }
    }
  },
  {
    "n": {
"identity": 2305,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "神经图灵机"
      }
    }
  },
  {
    "n": {
"identity": 2306,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "基于神经动力学的联想记忆"
      }
    }
  },
  {
    "n": {
"identity": 2307,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Hopfield网络"
      }
    }
  },
  {
    "n": {
"identity": 2308,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "无监督学习"
      }
    }
  },
  {
    "n": {
"identity": 2309,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "无监督特征学习"
      }
    }
  },
  {
    "n": {
"identity": 2310,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "主成分分析"
      }
    }
  },
  {
    "n": {
"identity": 2311,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "稀疏编码"
      }
    }
  },
  {
    "n": {
"identity": 2312,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "自编码器"
      }
    }
  },
  {
    "n": {
"identity": 2313,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "编码器"
      }
    }
  },
  {
    "n": {
"identity": 2314,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "解码器"
      }
    }
  },
  {
    "n": {
"identity": 2315,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "稀疏自编码器"
      }
    }
  },
  {
    "n": {
"identity": 2316,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "堆叠自编码器"
      }
    }
  },
  {
    "n": {
"identity": 2317,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "降噪自编码器"
      }
    }
  },
  {
    "n": {
"identity": 2318,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "概率密度估计"
      }
    }
  },
  {
    "n": {
"identity": 2319,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "参数密度估计"
      }
    }
  },
  {
    "n": {
"identity": 2320,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "非参数密度估计"
      }
    }
  },
  {
    "n": {
"identity": 2321,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "模型独立的学习方式"
      }
    }
  },
  {
    "n": {
"identity": 2322,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "集成学习"
      }
    }
  },
  {
    "n": {
"identity": 2323,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Bagging类方法"
      }
    }
  },
  {
    "n": {
"identity": 2324,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Bagging"
      }
    }
  },
  {
    "n": {
"identity": 2325,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "随机森林"
      }
    }
  },
  {
    "n": {
"identity": 2326,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Boosting类方法"
      }
    }
  },
  {
    "n": {
"identity": 2327,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "AdaBoost"
      }
    }
  },
  {
    "n": {
"identity": 2328,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "协同学习"
      }
    }
  },
  {
    "n": {
"identity": 2329,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "多任务学习"
      }
    }
  },
  {
    "n": {
"identity": 2330,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "共享机制"
      }
    }
  },
  {
    "n": {
"identity": 2331,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "硬共享模式"
      }
    }
  },
  {
    "n": {
"identity": 2332,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "软共享模式"
      }
    }
  },
  {
    "n": {
"identity": 2333,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "层次共享模式"
      }
    }
  },
  {
    "n": {
"identity": 2334,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "共享-私有模式"
      }
    }
  },
  {
    "n": {
"identity": 2335,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "迁移学习"
      }
    }
  },
  {
    "n": {
"identity": 2336,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "归纳迁移学习"
      }
    }
  },
  {
    "n": {
"identity": 2337,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "转导迁移学习"
      }
    }
  },
  {
    "n": {
"identity": 2338,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "元学习"
      }
    }
  },
  {
    "n": {
"identity": 2339,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "基于优化器的元学习"
      }
    }
  },
  {
    "n": {
"identity": 2340,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "模型无关的元学习"
      }
    }
  },
  {
    "n": {
"identity": 2341,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "深度信念网络"
      }
    }
  },
  {
    "n": {
"identity": 2342,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "玻尔兹曼机"
      }
    }
  },
  {
    "n": {
"identity": 2343,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "玻尔兹曼分布"
      }
    }
  },
  {
    "n": {
"identity": 2344,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "玻尔兹曼因子"
      }
    }
  },
  {
    "n": {
"identity": 2345,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "配分函数"
      }
    }
  },
  {
    "n": {
"identity": 2346,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "玻尔兹曼机的参数学习"
      }
    }
  },
  {
    "n": {
"identity": 2347,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "受限玻尔兹曼机"
      }
    }
  },
  {
    "n": {
"identity": 2348,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "对比散度算法"
      }
    }
  },
  {
    "n": {
"identity": 2349,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "受限玻尔兹曼机的参数学习"
      }
    }
  },
  {
    "n": {
"identity": 2350,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "深度生成模型"
      }
    }
  },
  {
    "n": {
"identity": 2351,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "概率生成模型"
      }
    }
  },
  {
    "n": {
"identity": 2352,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "密度估计"
      }
    }
  },
  {
    "n": {
"identity": 2353,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "生成样本"
      }
    }
  },
  {
    "n": {
"identity": 2354,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "变分自编码器"
      }
    }
  },
  {
    "n": {
"identity": 2355,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "推断网络"
      }
    }
  },
  {
    "n": {
"identity": 2356,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "推断网络的目标"
      }
    }
  },
  {
    "n": {
"identity": 2357,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "生成网络"
      }
    }
  },
  {
    "n": {
"identity": 2358,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "生成网络的目标"
      }
    }
  },
  {
    "n": {
"identity": 2359,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "生成对抗网络"
      }
    }
  },
  {
    "n": {
"identity": 2360,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "显式密度模型"
      }
    }
  },
  {
    "n": {
"identity": 2361,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "隐式密度模型"
      }
    }
  },
  {
    "n": {
"identity": 2362,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "对抗训练"
      }
    }
  },
  {
    "n": {
"identity": 2363,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "判别网络"
      }
    }
  },
  {
    "n": {
"identity": 2364,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "JS散度"
      }
    }
  },
  {
    "n": {
"identity": 2365,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "KL散度"
      }
    }
  },
  {
    "n": {
"identity": 2366,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "前向KL散度"
      }
    }
  },
  {
    "n": {
"identity": 2367,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "逆向KL散度"
      }
    }
  },
  {
    "n": {
"identity": 2368,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "生成对抗网络的具体实现"
      }
    }
  },
  {
    "n": {
"identity": 2369,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "深度卷积生成对抗网络"
      }
    }
  },
  {
    "n": {
"identity": 2370,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "W-GAN"
      }
    }
  },
  {
    "n": {
"identity": 2371,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "深度强化学习"
      }
    }
  },
  {
    "n": {
"identity": 2372,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "强化学习"
      }
    }
  },
  {
    "n": {
"identity": 2373,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "贡献度分配问题"
      }
    }
  },
  {
    "n": {
"identity": 2374,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "强化学习的任务定义"
      }
    }
  },
  {
    "n": {
"identity": 2375,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "智能体"
      }
    }
  },
  {
    "n": {
"identity": 2376,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "智能体的策略"
      }
    }
  },
  {
    "n": {
"identity": 2377,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "确定性策略"
      }
    }
  },
  {
    "n": {
"identity": 2378,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "随机性策略"
      }
    }
  },
  {
    "n": {
"identity": 2379,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "环境"
      }
    }
  },
  {
    "n": {
"identity": 2380,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "强化学习的基本要素"
      }
    }
  },
  {
    "n": {
"identity": 2381,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "环境的状态集合"
      }
    }
  },
  {
    "n": {
"identity": 2382,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "智能体的动作集合"
      }
    }
  },
  {
    "n": {
"identity": 2383,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "状态转移概率"
      }
    }
  },
  {
    "n": {
"identity": 2384,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "即时奖励"
      }
    }
  },
  {
    "n": {
"identity": 2385,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "基于值函数的学习方法"
      }
    }
  },
  {
    "n": {
"identity": 2386,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "动态规划算法"
      }
    }
  },
  {
    "n": {
"identity": 2387,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "策略迭代算法"
      }
    }
  },
  {
    "n": {
"identity": 2388,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "策略改进"
      }
    }
  },
  {
    "n": {
"identity": 2389,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "值迭代算法"
      }
    }
  },
  {
    "n": {
"identity": 2390,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "最优策略"
      }
    }
  },
  {
    "n": {
"identity": 2391,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "最优值函数"
      }
    }
  },
  {
    "n": {
"identity": 2392,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "最优状态值函数"
      }
    }
  },
  {
    "n": {
"identity": 2393,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "最优状态-动作函数"
      }
    }
  },
  {
    "n": {
"identity": 2394,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "贝尔曼最优方程"
      }
    }
  },
  {
    "n": {
"identity": 2395,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "蒙特卡罗方法"
      }
    }
  },
  {
    "n": {
"identity": 2396,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "ε-贪心法"
      }
    }
  },
  {
    "n": {
"identity": 2397,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "时序差分学习方法"
      }
    }
  },
  {
    "n": {
"identity": 2398,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "基于策略函数的学习方法"
      }
    }
  },
  {
    "n": {
"identity": 2399,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "策略搜索"
      }
    }
  },
  {
    "n": {
"identity": 2400,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于梯度的优化"
      }
    }
  },
  {
    "n": {
"identity": 2401,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "策略梯度"
      }
    }
  },
  {
    "n": {
"identity": 2402,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "REINFORCE算法"
      }
    }
  },
  {
    "n": {
"identity": 2403,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "带基准线的REINFORCE算法"
      }
    }
  },
  {
    "n": {
"identity": 2404,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "演员-评论员算法"
      }
    }
  },
  {
    "n": {
"identity": 2405,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "无梯度优化"
      }
    }
  },
  {
    "n": {
"identity": 2406,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "序列生成模型"
      }
    }
  },
  {
    "n": {
"identity": 2407,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "序列概率模型"
      }
    }
  },
  {
    "n": {
"identity": 2408,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "序列生成"
      }
    }
  },
  {
    "n": {
"identity": 2409,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "束搜索"
      }
    }
  },
  {
    "n": {
"identity": 2410,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "自回归生成模型"
      }
    }
  },
  {
    "n": {
"identity": 2411,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "N元统计模型"
      }
    }
  },
  {
    "n": {
"identity": 2412,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据稀疏问题"
      }
    }
  },
  {
    "n": {
"identity": 2413,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "平滑技术"
      }
    }
  },
  {
    "n": {
"identity": 2414,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "深度序列模型"
      }
    }
  },
  {
    "n": {
"identity": 2415,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "模型结构"
      }
    }
  },
  {
    "n": {
"identity": 2416,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "嵌入层"
      }
    }
  },
  {
    "n": {
"identity": 2417,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "特征层"
      }
    }
  },
  {
    "n": {
"identity": 2418,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "非自回归生成模型"
      }
    }
  },
  {
    "n": {
"identity": 2419,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "序列生成模型的评价方法"
      }
    }
  },
  {
    "n": {
"identity": 2420,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "困惑度"
      }
    }
  },
  {
    "n": {
"identity": 2421,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "BLEU"
      }
    }
  },
  {
    "n": {
"identity": 2422,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "ROUGE算法"
      }
    }
  },
  {
    "n": {
"identity": 2423,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "序列到序列模型"
      }
    }
  },
  {
    "n": {
"identity": 2424,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "基于循环神经网络的序列到序列模型"
      }
    }
  },
  {
    "n": {
"identity": 2425,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "基于注意力的序列到序列模型"
      }
    }
  },
  {
    "n": {
"identity": 2426,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "基于自注意力的序列到序列模型"
      }
    }
  },
  {
    "n": {
"identity": 2427,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于多头自注意力的序列到序列模型"
      }
    }
  },
  {
    "n": {
"identity": 2428,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Transformer模型"
      }
    }
  },
  {
    "n": {
"identity": 2429,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Transformer模型的网络结构"
      }
    }
  },
  {
    "n": {
"identity": 2430,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "多头自注意力模块"
      }
    }
  },
  {
    "n": {
"identity": 2431,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "掩蔽自注意力模块"
      }
    }
  },
  {
    "n": {
"identity": 2432,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "解码器到编码器注意力模块"
      }
    }
  },
  {
    "n": {
"identity": 2433,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "逐位置的前馈神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2434,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "大数据前沿知识"
      }
    }
  },
  {
    "n": {
"identity": 2435,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "大数据技术概述"
      }
    }
  },
  {
    "n": {
"identity": 2436,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "大数据的概念"
      }
    }
  },
  {
    "n": {
"identity": 2437,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据"
      }
    }
  },
  {
    "n": {
"identity": 2438,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "大数据"
      }
    }
  },
  {
    "n": {
"identity": 2439,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "价值高"
      }
    }
  },
  {
    "n": {
"identity": 2440,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "速度快"
      }
    }
  },
  {
    "n": {
"identity": 2441,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "体量大"
      }
    }
  },
  {
    "n": {
"identity": 2442,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "种类多"
      }
    }
  },
  {
    "n": {
"identity": 2443,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "大数据的产生原因"
      }
    }
  },
  {
    "n": {
"identity": 2444,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "计算"
      }
    }
  },
  {
    "n": {
"identity": 2445,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "存储"
      }
    }
  },
  {
    "n": {
"identity": 2446,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "智能"
      }
    }
  },
  {
    "n": {
"identity": 2447,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "大数据的意义"
      }
    }
  },
  {
    "n": {
"identity": 2448,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "大数据的来源"
      }
    }
  },
  {
    "n": {
"identity": 2449,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "泛互联网数据"
      }
    }
  },
  {
    "n": {
"identity": 2450,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "传感器"
      }
    }
  },
  {
    "n": {
"identity": 2451,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "科学研究及行业多结构专业数据"
      }
    }
  },
  {
    "n": {
"identity": 2452,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "大数据的应用场景"
      }
    }
  },
  {
    "n": {
"identity": 2453,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "教育行业"
      }
    }
  },
  {
    "n": {
"identity": 2454,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "医疗行业"
      }
    }
  },
  {
    "n": {
"identity": 2455,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "农业"
      }
    }
  },
  {
    "n": {
"identity": 2456,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "智慧城市"
      }
    }
  },
  {
    "n": {
"identity": 2457,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "零售行业"
      }
    }
  },
  {
    "n": {
"identity": 2458,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "金融行业"
      }
    }
  },
  {
    "n": {
"identity": 2459,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "数据分析方法"
      }
    }
  },
  {
    "n": {
"identity": 2460,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据分析思路"
      }
    }
  },
  {
    "n": {
"identity": 2461,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "定义问题"
      }
    }
  },
  {
    "n": {
"identity": 2462,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "5W"
      }
    }
  },
  {
    "n": {
"identity": 2463,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "What"
      }
    }
  },
  {
    "n": {
"identity": 2464,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "When"
      }
    }
  },
  {
    "n": {
"identity": 2465,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "Where"
      }
    }
  },
  {
    "n": {
"identity": 2466,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "Who"
      }
    }
  },
  {
    "n": {
"identity": 2467,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "Why"
      }
    }
  },
  {
    "n": {
"identity": 2468,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "2H"
      }
    }
  },
  {
    "n": {
"identity": 2469,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "How many"
      }
    }
  },
  {
    "n": {
"identity": 2470,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "How much"
      }
    }
  },
  {
    "n": {
"identity": 2471,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "收集整理信息"
      }
    }
  },
  {
    "n": {
"identity": 2472,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "问题结构"
      }
    }
  },
  {
    "n": {
"identity": 2473,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "初步问题分析"
      }
    }
  },
  {
    "n": {
"identity": 2474,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "深层次问题分析"
      }
    }
  },
  {
    "n": {
"identity": 2475,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "问题分解"
      }
    }
  },
  {
    "n": {
"identity": 2476,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "选取分析方法"
      }
    }
  },
  {
    "n": {
"identity": 2477,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "统计方法特性"
      }
    }
  },
  {
    "n": {
"identity": 2478,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "实用性"
      }
    }
  },
  {
    "n": {
"identity": 2479,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "丰富性"
      }
    }
  },
  {
    "n": {
"identity": 2480,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "公平性"
      }
    }
  },
  {
    "n": {
"identity": 2481,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据挖掘方法"
      }
    }
  },
  {
    "n": {
"identity": 2482,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "统计方法"
      }
    }
  },
  {
    "n": {
"identity": 2483,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "机器学习方法"
      }
    }
  },
  {
    "n": {
"identity": 2484,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "神经网络方法"
      }
    }
  },
  {
    "n": {
"identity": 2485,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "数据库方法"
      }
    }
  },
  {
    "n": {
"identity": 2486,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据提取整理"
      }
    }
  },
  {
    "n": {
"identity": 2487,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据质量评估"
      }
    }
  },
  {
    "n": {
"identity": 2488,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "分析结果及结论"
      }
    }
  },
  {
    "n": {
"identity": 2489,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "分析结果呈现原则"
      }
    }
  },
  {
    "n": {
"identity": 2490,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "确定表达主题"
      }
    }
  },
  {
    "n": {
"identity": 2491,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "确定对比关系"
      }
    }
  },
  {
    "n": {
"identity": 2492,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "选择图形"
      }
    }
  },
  {
    "n": {
"identity": 2493,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "实施及建议措施"
      }
    }
  },
  {
    "n": {
"identity": 2494,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "实施效果评估及报告整理"
      }
    }
  },
  {
    "n": {
"identity": 2495,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "大数据处理方法"
      }
    }
  },
  {
    "n": {
"identity": 2496,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "大数据技术层次"
      }
    }
  },
  {
    "n": {
"identity": 2497,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据采集与预处理"
      }
    }
  },
  {
    "n": {
"identity": 2498,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据源"
      }
    }
  },
  {
    "n": {
"identity": 2499,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "传感器"
      }
    }
  },
  {
    "n": {
"identity": 2500,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "互联网数据"
      }
    }
  },
  {
    "n": {
"identity": 2501,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "企业业务系统数据"
      }
    }
  },
  {
    "n": {
"identity": 2502,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "日志文件"
      }
    }
  },
  {
    "n": {
"identity": 2503,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据清洗"
      }
    }
  },
  {
    "n": {
"identity": 2504,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据存储和管理"
      }
    }
  },
  {
    "n": {
"identity": 2505,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "传统数据存储和管理技术"
      }
    }
  },
  {
    "n": {
"identity": 2506,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "文件系统"
      }
    }
  },
  {
    "n": {
"identity": 2507,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "关系数据库"
      }
    }
  },
  {
    "n": {
"identity": 2508,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "数据仓库"
      }
    }
  },
  {
    "n": {
"identity": 2509,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "并行数据库"
      }
    }
  },
  {
    "n": {
"identity": 2510,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "大数据时代数据存储和管理技术"
      }
    }
  },
  {
    "n": {
"identity": 2511,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "分布式文件系统"
      }
    }
  },
  {
    "n": {
"identity": 2512,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "NewSQL"
      }
    }
  },
  {
    "n": {
"identity": 2513,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "NoSQL"
      }
    }
  },
  {
    "n": {
"identity": 2514,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "数据挖掘算法"
      }
    }
  },
  {
    "n": {
"identity": 2515,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "机器学习算法"
      }
    }
  },
  {
    "n": {
"identity": 2516,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据处理与分析"
      }
    }
  },
  {
    "n": {
"identity": 2517,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "大数据处理与分析技术"
      }
    }
  },
  {
    "n": {
"identity": 2518,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "批处理计算"
      }
    }
  },
  {
    "n": {
"identity": 2519,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "流计算"
      }
    }
  },
  {
    "n": {
"identity": 2520,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "图计算"
      }
    }
  },
  {
    "n": {
"identity": 2521,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "查询分析计算"
      }
    }
  },
  {
    "n": {
"identity": 2522,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据可视化"
      }
    }
  },
  {
    "n": {
"identity": 2523,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据可视化的作用"
      }
    }
  },
  {
    "n": {
"identity": 2524,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "观测、跟踪数据"
      }
    }
  },
  {
    "n": {
"identity": 2525,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "分析数据"
      }
    }
  },
  {
    "n": {
"identity": 2526,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "辅助理解数据"
      }
    }
  },
  {
    "n": {
"identity": 2527,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "增强数据吸引力"
      }
    }
  },
  {
    "n": {
"identity": 2528,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据安全和隐私保护"
      }
    }
  },
  {
    "n": {
"identity": 2529,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据安全技术"
      }
    }
  },
  {
    "n": {
"identity": 2530,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "身份认证技术"
      }
    }
  },
  {
    "n": {
"identity": 2531,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "防火墙技术"
      }
    }
  },
  {
    "n": {
"identity": 2532,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "访问控制技术"
      }
    }
  },
  {
    "n": {
"identity": 2533,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "入侵检测技术"
      }
    }
  },
  {
    "n": {
"identity": 2534,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "加密技术"
      }
    }
  },
  {
    "n": {
"identity": 2535,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "隐私保护技术"
      }
    }
  },
  {
    "n": {
"identity": 2536,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "数据水印"
      }
    }
  },
  {
    "n": {
"identity": 2537,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "大数据处理架构"
      }
    }
  },
  {
    "n": {
"identity": 2538,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "问题提出"
      }
    }
  },
  {
    "n": {
"identity": 2539,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "可靠性"
      }
    }
  },
  {
    "n": {
"identity": 2540,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "分布式存储"
      }
    }
  },
  {
    "n": {
"identity": 2541,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "分布式计算"
      }
    }
  },
  {
    "n": {
"identity": 2542,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "处理过程"
      }
    }
  },
  {
    "n": {
"identity": 2543,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "本地计算(Map)"
      }
    }
  },
  {
    "n": {
"identity": 2544,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "洗牌(Shuffle)"
      }
    }
  },
  {
    "n": {
"identity": 2545,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "合并再计算(Reduce)"
      }
    }
  },
  {
    "n": {
"identity": 2546,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "架构思想"
      }
    }
  },
  {
    "n": {
"identity": 2547,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "完整形式"
      }
    }
  },
  {
    "n": {
"identity": 2548,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "冗余存储"
      }
    }
  },
  {
    "n": {
"identity": 2549,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "冗余计算"
      }
    }
  },
  {
    "n": {
"identity": 2550,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "数据采集与预处理"
      }
    }
  },
  {
    "n": {
"identity": 2551,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "大数据日志采集工具"
      }
    }
  },
  {
    "n": {
"identity": 2552,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Flume"
      }
    }
  },
  {
    "n": {
"identity": 2553,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Chukwa"
      }
    }
  },
  {
    "n": {
"identity": 2554,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Scrible"
      }
    }
  },
  {
    "n": {
"identity": 2555,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Kafka"
      }
    }
  },
  {
    "n": {
"identity": 2556,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "网络爬虫"
      }
    }
  },
  {
    "n": {
"identity": 2557,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "数据挖掘算法"
      }
    }
  },
  {
    "n": {
"identity": 2558,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据库"
      }
    }
  },
  {
    "n": {
"identity": 2559,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据库技术"
      }
    }
  },
  {
    "n": {
"identity": 2560,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据存储"
      }
    }
  },
  {
    "n": {
"identity": 2561,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据的安全性"
      }
    }
  },
  {
    "n": {
"identity": 2562,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据的一致性"
      }
    }
  },
  {
    "n": {
"identity": 2563,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据的并发控制"
      }
    }
  },
  {
    "n": {
"identity": 2564,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据维护"
      }
    }
  },
  {
    "n": {
"identity": 2565,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据备份"
      }
    }
  },
  {
    "n": {
"identity": 2566,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据恢复"
      }
    }
  },
  {
    "n": {
"identity": 2567,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "联机事务处理(OLTP)"
      }
    }
  },
  {
    "n": {
"identity": 2568,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据仓库"
      }
    }
  },
  {
    "n": {
"identity": 2569,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据仓库技术"
      }
    }
  },
  {
    "n": {
"identity": 2570,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据预处理"
      }
    }
  },
  {
    "n": {
"identity": 2571,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "OLAP多维分析"
      }
    }
  },
  {
    "n": {
"identity": 2572,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "切片"
      }
    }
  },
  {
    "n": {
"identity": 2573,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "切块"
      }
    }
  },
  {
    "n": {
"identity": 2574,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "旋转"
      }
    }
  },
  {
    "n": {
"identity": 2575,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "钻取"
      }
    }
  },
  {
    "n": {
"identity": 2576,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "联机分析处理(OLAP)"
      }
    }
  },
  {
    "n": {
"identity": 2577,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "知识发现(KDD)"
      }
    }
  },
  {
    "n": {
"identity": 2578,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "融合学科"
      }
    }
  },
  {
    "n": {
"identity": 2579,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据库系统"
      }
    }
  },
  {
    "n": {
"identity": 2580,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "机器学习"
      }
    }
  },
  {
    "n": {
"identity": 2581,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "算法"
      }
    }
  },
  {
    "n": {
"identity": 2582,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "统计学"
      }
    }
  },
  {
    "n": {
"identity": 2583,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "可视化"
      }
    }
  },
  {
    "n": {
"identity": 2584,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "其他"
      }
    }
  },
  {
    "n": {
"identity": 2585,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "算法分类"
      }
    }
  },
  {
    "n": {
"identity": 2586,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "预测性"
      }
    }
  },
  {
    "n": {
"identity": 2587,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "(朴素)贝叶斯"
      }
    }
  },
  {
    "n": {
"identity": 2588,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "决策树"
      }
    }
  },
  {
    "n": {
"identity": 2589,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "逻辑回归"
      }
    }
  },
  {
    "n": {
"identity": 2590,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "KNN"
      }
    }
  },
  {
    "n": {
"identity": 2591,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "SVM"
      }
    }
  },
  {
    "n": {
"identity": 2592,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2593,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "随机森林"
      }
    }
  },
  {
    "n": {
"identity": 2594,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "描述性"
      }
    }
  },
  {
    "n": {
"identity": 2595,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Q型聚类"
      }
    }
  },
  {
    "n": {
"identity": 2596,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "欧氏距离"
      }
    }
  },
  {
    "n": {
"identity": 2597,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "欧氏平方距离"
      }
    }
  },
  {
    "n": {
"identity": 2598,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "马氏距离"
      }
    }
  },
  {
    "n": {
"identity": 2599,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "明式距离"
      }
    }
  },
  {
    "n": {
"identity": 2600,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "R型聚类"
      }
    }
  },
  {
    "n": {
"identity": 2601,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "皮尔逊相关系数"
      }
    }
  },
  {
    "n": {
"identity": 2602,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "夹角余弦"
      }
    }
  },
  {
    "n": {
"identity": 2603,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "指数相关系数"
      }
    }
  },
  {
    "n": {
"identity": 2604,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "层次聚类"
      }
    }
  },
  {
    "n": {
"identity": 2605,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "BIRCH"
      }
    }
  },
  {
    "n": {
"identity": 2606,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "划分聚类"
      }
    }
  },
  {
    "n": {
"identity": 2607,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "K-Means"
      }
    }
  },
  {
    "n": {
"identity": 2608,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "基于密度的聚类"
      }
    }
  },
  {
    "n": {
"identity": 2609,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "DBSCAN"
      }
    }
  },
  {
    "n": {
"identity": 2610,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "基于网格的聚类"
      }
    }
  },
  {
    "n": {
"identity": 2611,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "基于模型的聚类"
      }
    }
  },
  {
    "n": {
"identity": 2612,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "EM算法"
      }
    }
  },
  {
    "n": {
"identity": 2613,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "COBWEB算法"
      }
    }
  },
  {
    "n": {
"identity": 2614,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "SOM算法"
      }
    }
  },
  {
    "n": {
"identity": 2615,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "关联"
      }
    }
  },
  {
    "n": {
"identity": 2616,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "关联规则"
      }
    }
  },
  {
    "n": {
"identity": 2617,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "项目"
      }
    }
  },
  {
    "n": {
"identity": 2618,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "事务"
      }
    }
  },
  {
    "n": {
"identity": 2619,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "项集"
      }
    }
  },
  {
    "n": {
"identity": 2620,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "频繁项集"
      }
    }
  },
  {
    "n": {
"identity": 2621,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "经典的查找策略"
      }
    }
  },
  {
    "n": {
"identity": 2622,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "基于广度优先搜索策略"
      }
    }
  },
  {
    "n": {
"identity": 2623,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "Apriori"
      }
    }
  },
  {
    "n": {
"identity": 2624,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "DHP"
      }
    }
  },
  {
    "n": {
"identity": 2625,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "基于深度优先搜索策略"
      }
    }
  },
  {
    "n": {
"identity": 2626,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "FP-Growth"
      }
    }
  },
  {
    "n": {
"identity": 2627,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "ECLAT"
      }
    }
  },
  {
    "n": {
"identity": 2628,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "COFI"
      }
    }
  },
  {
    "n": {
"identity": 2629,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于精简集的查找策略"
      }
    }
  },
  {
    "n": {
"identity": 2630,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "A-close"
      }
    }
  },
  {
    "n": {
"identity": 2631,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "基于最大频繁项集的查找策略"
      }
    }
  },
  {
    "n": {
"identity": 2632,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "MAFIA"
      }
    }
  },
  {
    "n": {
"identity": 2633,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "GenMax"
      }
    }
  },
  {
    "n": {
"identity": 2634,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "DepthProject"
      }
    }
  },
  {
    "n": {
"identity": 2635,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "置信度"
      }
    }
  },
  {
    "n": {
"identity": 2636,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "挖掘问题"
      }
    }
  },
  {
    "n": {
"identity": 2637,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "发现频繁项集"
      }
    }
  },
  {
    "n": {
"identity": 2638,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "预测分析"
      }
    }
  },
  {
    "n": {
"identity": 2639,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "时间序列"
      }
    }
  },
  {
    "n": {
"identity": 2640,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "统计特征"
      }
    }
  },
  {
    "n": {
"identity": 2641,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "均值函数"
      }
    }
  },
  {
    "n": {
"identity": 2642,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "自协方差函数"
      }
    }
  },
  {
    "n": {
"identity": 2643,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "自相关函数"
      }
    }
  },
  {
    "n": {
"identity": 2644,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "时间序列模型"
      }
    }
  },
  {
    "n": {
"identity": 2645,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "自回归模型"
      }
    }
  },
  {
    "n": {
"identity": 2646,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "移动平均模型"
      }
    }
  },
  {
    "n": {
"identity": 2647,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "自回归移动平均模型"
      }
    }
  },
  {
    "n": {
"identity": 2648,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "典型算法"
      }
    }
  },
  {
    "n": {
"identity": 2649,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "序贯模式挖掘SPMGC算法"
      }
    }
  },
  {
    "n": {
"identity": 2650,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "预测方案"
      }
    }
  },
  {
    "n": {
"identity": 2651,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "定性预测方法"
      }
    }
  },
  {
    "n": {
"identity": 2652,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "时间序列预测"
      }
    }
  },
  {
    "n": {
"identity": 2653,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "因果关系预测"
      }
    }
  },
  {
    "n": {
"identity": 2654,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "应用"
      }
    }
  },
  {
    "n": {
"identity": 2655,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "零售业"
      }
    }
  },
  {
    "n": {
"identity": 2656,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "超市购物篮分析"
      }
    }
  },
  {
    "n": {
"identity": 2657,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "深度学习与人工智能"
      }
    }
  },
  {
    "n": {
"identity": 2658,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "人工神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2659,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "神经元"
      }
    }
  },
  {
    "n": {
"identity": 2660,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "感知器"
      }
    }
  },
  {
    "n": {
"identity": 2661,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "激活函数"
      }
    }
  },
  {
    "n": {
"identity": 2662,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "阶跃函数"
      }
    }
  },
  {
    "n": {
"identity": 2663,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Sigmoid函数"
      }
    }
  },
  {
    "n": {
"identity": 2664,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "双曲线正切函数"
      }
    }
  },
  {
    "n": {
"identity": 2665,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Rectifier函数"
      }
    }
  },
  {
    "n": {
"identity": 2666,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "网络架构"
      }
    }
  },
  {
    "n": {
"identity": 2667,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "输入层"
      }
    }
  },
  {
    "n": {
"identity": 2668,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "输出层"
      }
    }
  },
  {
    "n": {
"identity": 2669,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "隐藏层"
      }
    }
  },
  {
    "n": {
"identity": 2670,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "误差逆传播算法"
      }
    }
  },
  {
    "n": {
"identity": 2671,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "深度神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2672,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "卷积神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2673,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "局部感受区域"
      }
    }
  },
  {
    "n": {
"identity": 2674,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "权值共享"
      }
    }
  },
  {
    "n": {
"identity": 2675,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "降采样"
      }
    }
  },
  {
    "n": {
"identity": 2676,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "深度置信网络"
      }
    }
  },
  {
    "n": {
"identity": 2677,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "循环神经网络"
      }
    }
  },
  {
    "n": {
"identity": 2678,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "应用"
      }
    }
  },
  {
    "n": {
"identity": 2679,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "语音识别"
      }
    }
  },
  {
    "n": {
"identity": 2680,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "图像分析"
      }
    }
  },
  {
    "n": {
"identity": 2681,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "自然语言处理"
      }
    }
  },
  {
    "n": {
"identity": 2682,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "大数据安全与隐私包含"
      }
    }
  },
  {
    "n": {
"identity": 2683,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "传统数据安全"
      }
    }
  },
  {
    "n": {
"identity": 2684,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "计算机病毒"
      }
    }
  },
  {
    "n": {
"identity": 2685,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "黑客攻击"
      }
    }
  },
  {
    "n": {
"identity": 2686,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据信息存储介质的破坏"
      }
    }
  },
  {
    "n": {
"identity": 2687,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "传统信息安全理论"
      }
    }
  },
  {
    "n": {
"identity": 2688,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "保密性"
      }
    }
  },
  {
    "n": {
"identity": 2689,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "可用性"
      }
    }
  },
  {
    "n": {
"identity": 2690,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "完整性"
      }
    }
  },
  {
    "n": {
"identity": 2691,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "大数据安全"
      }
    }
  },
  {
    "n": {
"identity": 2692,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "隐私和个人信息安全"
      }
    }
  },
  {
    "n": {
"identity": 2693,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据脚印"
      }
    }
  },
  {
    "n": {
"identity": 2694,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据泄密"
      }
    }
  },
  {
    "n": {
"identity": 2695,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "国家安全"
      }
    }
  },
  {
    "n": {
"identity": 2696,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "案例"
      }
    }
  },
  {
    "n": {
"identity": 2697,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "棱镜门"
      }
    }
  },
  {
    "n": {
"identity": 2698,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "维基解密"
      }
    }
  },
  {
    "n": {
"identity": 2699,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Facebook数据滥用"
      }
    }
  },
  {
    "n": {
"identity": 2700,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "手机应用软件过度采集个人信息"
      }
    }
  },
  {
    "n": {
"identity": 2701,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "12306数据泄露"
      }
    }
  },
  {
    "n": {
"identity": 2702,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "免费WiFi窃取用户信息"
      }
    }
  },
  {
    "n": {
"identity": 2703,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "探针盒子"
      }
    }
  },
  {
    "n": {
"identity": 2704,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "大数据保护基本原则"
      }
    }
  },
  {
    "n": {
"identity": 2705,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据主权"
      }
    }
  },
  {
    "n": {
"identity": 2706,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据自由流通"
      }
    }
  },
  {
    "n": {
"identity": 2707,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据保护"
      }
    }
  },
  {
    "n": {
"identity": 2708,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据安全"
      }
    }
  },
  {
    "n": {
"identity": 2709,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "数据安全与隐私保护对策"
      }
    }
  },
  {
    "n": {
"identity": 2710,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "国家法制管控"
      }
    }
  },
  {
    "n": {
"identity": 2711,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "企业源头遏制"
      }
    }
  },
  {
    "n": {
"identity": 2712,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "个人意识提高"
      }
    }
  },
  {
    "n": {
"identity": 2713,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "数据安全实践"
      }
    }
  },
  {
    "n": {
"identity": 2714,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "欧盟"
      }
    }
  },
  {
    "n": {
"identity": 2715,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "美国"
      }
    }
  },
  {
    "n": {
"identity": 2716,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "英国"
      }
    }
  },
  {
    "n": {
"identity": 2717,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "中国"
      }
    }
  },
  {
    "n": {
"identity": 2718,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "德国"
      }
    }
  },
  {
    "n": {
"identity": 2719,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "新加坡"
      }
    }
  },
  {
    "n": {
"identity": 2720,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "印度"
      }
    }
  },
  {
    "n": {
"identity": 2721,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "澳大利亚"
      }
    }
  },
  {
    "n": {
"identity": 2722,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "巴西"
      }
    }
  },
  {
    "n": {
"identity": 2723,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "俄罗斯"
      }
    }
  },
  {
    "n": {
"identity": 2724,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "韩国"
      }
    }
  },
  {
    "n": {
"identity": 2725,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "日本"
      }
    }
  },
  {
    "n": {
"identity": 2726,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "大数据应用"
      }
    }
  },
  {
    "n": {
"identity": 2727,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "用户画像"
      }
    }
  },
  {
    "n": {
"identity": 2728,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "价值"
      }
    }
  },
  {
    "n": {
"identity": 2729,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "精准营销"
      }
    }
  },
  {
    "n": {
"identity": 2730,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "用户统计"
      }
    }
  },
  {
    "n": {
"identity": 2731,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据挖掘"
      }
    }
  },
  {
    "n": {
"identity": 2732,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "效果评估"
      }
    }
  },
  {
    "n": {
"identity": 2733,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "指导产品研发"
      }
    }
  },
  {
    "n": {
"identity": 2734,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "优化用户体验"
      }
    }
  },
  {
    "n": {
"identity": 2735,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "构建流程"
      }
    }
  },
  {
    "n": {
"identity": 2736,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据收集"
      }
    }
  },
  {
    "n": {
"identity": 2737,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "网络行为"
      }
    }
  },
  {
    "n": {
"identity": 2738,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "服务内行为"
      }
    }
  },
  {
    "n": {
"identity": 2739,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "用户内容偏好"
      }
    }
  },
  {
    "n": {
"identity": 2740,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "用户交易"
      }
    }
  },
  {
    "n": {
"identity": 2741,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "数据建模"
      }
    }
  },
  {
    "n": {
"identity": 2742,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "文本挖掘"
      }
    }
  },
  {
    "n": {
"identity": 2743,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "自然语言处理"
      }
    }
  },
  {
    "n": {
"identity": 2744,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "机器学习"
      }
    }
  },
  {
    "n": {
"identity": 2745,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "预测算法"
      }
    }
  },
  {
    "n": {
"identity": 2746,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "聚类算法"
      }
    }
  },
  {
    "n": {
"identity": 2747,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "构建画像"
      }
    }
  },
  {
    "n": {
"identity": 2748,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "基本属性"
      }
    }
  },
  {
    "n": {
"identity": 2749,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "购买能力"
      }
    }
  },
  {
    "n": {
"identity": 2750,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "行为特征"
      }
    }
  },
  {
    "n": {
"identity": 2751,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "兴趣爱好"
      }
    }
  },
  {
    "n": {
"identity": 2752,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "心理特征"
      }
    }
  },
  {
    "n": {
"identity": 2753,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "社交网络"
      }
    }
  },
  {
    "n": {
"identity": 2754,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "标签体系"
      }
    }
  },
  {
    "n": {
"identity": 2755,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "结构化标签体系"
      }
    }
  },
  {
    "n": {
"identity": 2756,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "半结构化标签体系"
      }
    }
  },
  {
    "n": {
"identity": 2757,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "非结构化标签体系"
      }
    }
  },
  {
    "n": {
"identity": 2758,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "推荐系统"
      }
    }
  },
  {
    "n": {
"identity": 2759,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "性能判定"
      }
    }
  },
  {
    "n": {
"identity": 2760,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "用户满意度"
      }
    }
  },
  {
    "n": {
"identity": 2761,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "覆盖率"
      }
    }
  },
  {
    "n": {
"identity": 2762,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "预测准确度"
      }
    }
  },
  {
    "n": {
"identity": 2763,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "冷启动问题"
      }
    }
  },
  {
    "n": {
"identity": 2764,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "过度推荐热门问题"
      }
    }
  },
  {
    "n": {
"identity": 2765,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "个性化评价"
      }
    }
  },
  {
    "n": {
"identity": 2766,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "广告点击率CTR"
      }
    }
  },
  {
    "n": {
"identity": 2767,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "影响因素"
      }
    }
  },
  {
    "n": {
"identity": 2768,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "广告自身"
      }
    }
  },
  {
    "n": {
"identity": 2769,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "上下文环境"
      }
    }
  },
  {
    "n": {
"identity": 2770,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "广告浏览者"
      }
    }
  },
  {
    "n": {
"identity": 2771,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基于位置的服务和广告推荐"
      }
    }
  },
  {
    "n": {
"identity": 2772,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "4A服务"
      }
    }
  },
  {
    "n": {
"identity": 2773,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "随时(Anytime)"
      }
    }
  },
  {
    "n": {
"identity": 2774,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "随地(Anywhere)"
      }
    }
  },
  {
    "n": {
"identity": 2775,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "所有人(Anybody)"
      }
    }
  },
  {
    "n": {
"identity": 2776,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "所有事(Anything)"
      }
    }
  },
  {
    "n": {
"identity": 2777,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "位置服务"
      }
    }
  },
  {
    "n": {
"identity": 2778,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "定位技术"
      }
    }
  },
  {
    "n": {
"identity": 2779,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "电子地图技术"
      }
    }
  },
  {
    "n": {
"identity": 2780,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据分析"
      }
    }
  },
  {
    "n": {
"identity": 2781,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据挖掘"
      }
    }
  },
  {
    "n": {
"identity": 2782,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "广告推荐"
      }
    }
  },
  {
    "n": {
"identity": 2783,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "主动式"
      }
    }
  },
  {
    "n": {
"identity": 2784,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "被动式"
      }
    }
  },
  {
    "n": {
"identity": 2785,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "智慧交通"
      }
    }
  },
  {
    "n": {
"identity": 2786,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "框架"
      }
    }
  },
  {
    "n": {
"identity": 2787,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "分析预测管理层"
      }
    }
  },
  {
    "n": {
"identity": 2788,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "软件应用层"
      }
    }
  },
  {
    "n": {
"identity": 2789,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "物理感知层"
      }
    }
  },
  {
    "n": {
"identity": 2790,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "交通数据"
      }
    }
  },
  {
    "n": {
"identity": 2791,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "道路智慧交通系统"
      }
    }
  },
  {
    "n": {
"identity": 2792,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "动态系统"
      }
    }
  },
  {
    "n": {
"identity": 2793,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "交通流量监测系统"
      }
    }
  },
  {
    "n": {
"identity": 2794,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "信息控制系统"
      }
    }
  },
  {
    "n": {
"identity": 2795,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "高清视频监控系统"
      }
    }
  },
  {
    "n": {
"identity": 2796,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "静态系统"
      }
    }
  },
  {
    "n": {
"identity": 2797,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "环境道路数据"
      }
    }
  },
  {
    "n": {
"identity": 2798,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "交通流数据"
      }
    }
  },
  {
    "n": {
"identity": 2799,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "路段交通流数据"
      }
    }
  },
  {
    "n": {
"identity": 2800,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "地点交通流数据"
      }
    }
  },
  {
    "n": {
"identity": 2801,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "数据挖掘系统模型"
      }
    }
  },
  {
    "n": {
"identity": 2802,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "大数据应用"
      }
    }
  },
  {
    "n": {
"identity": 2803,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "拥堵定义及分析"
      }
    }
  },
  {
    "n": {
"identity": 2804,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "问题分析"
      }
    }
  },
  {
    "n": {
"identity": 2805,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "路段行驶时间和流量关系建模"
      }
    }
  },
  {
    "n": {
"identity": 2806,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "模型实现"
      }
    }
  },
  {
    "n": {
"identity": 2807,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "大数据处理技术"
      }
    }
  },
  {
    "n": {
"identity": 2808,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "云计算"
      }
    }
  },
  {
    "n": {
"identity": 2809,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "基本特点"
      }
    }
  },
  {
    "n": {
"identity": 2810,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "按需自助服务"
      }
    }
  },
  {
    "n": {
"identity": 2811,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "泛在接入"
      }
    }
  },
  {
    "n": {
"identity": 2812,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "资源池化"
      }
    }
  },
  {
    "n": {
"identity": 2813,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "快速弹性"
      }
    }
  },
  {
    "n": {
"identity": 2814,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "计费服务"
      }
    }
  },
  {
    "n": {
"identity": 2815,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "高可靠性"
      }
    }
  },
  {
    "n": {
"identity": 2816,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "服务分类"
      }
    }
  },
  {
    "n": {
"identity": 2817,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "基础设施即服务(IaaS)"
      }
    }
  },
  {
    "n": {
"identity": 2818,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "平台即服务(PaaS)"
      }
    }
  },
  {
    "n": {
"identity": 2819,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "软件即服务(SaaS)"
      }
    }
  },
  {
    "n": {
"identity": 2820,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "部署方式"
      }
    }
  },
  {
    "n": {
"identity": 2821,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "公有云"
      }
    }
  },
  {
    "n": {
"identity": 2822,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "社区云"
      }
    }
  },
  {
    "n": {
"identity": 2823,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "私有云"
      }
    }
  },
  {
    "n": {
"identity": 2824,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "混合云"
      }
    }
  },
  {
    "n": {
"identity": 2825,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "核心技术"
      }
    }
  },
  {
    "n": {
"identity": 2826,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "虚拟化"
      }
    }
  },
  {
    "n": {
"identity": 2827,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "并行计算"
      }
    }
  },
  {
    "n": {
"identity": 2828,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "分布式计算"
      }
    }
  },
  {
    "n": {
"identity": 2829,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "集群计算"
      }
    }
  },
  {
    "n": {
"identity": 2830,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "网格计算"
      }
    }
  },
  {
    "n": {
"identity": 2831,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "云计算平台"
      }
    }
  },
  {
    "n": {
"identity": 2832,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "虚拟化技术"
      }
    }
  },
  {
    "n": {
"identity": 2833,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "服务器虚拟化"
      }
    }
  },
  {
    "n": {
"identity": 2834,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "寄居虚拟化"
      }
    }
  },
  {
    "n": {
"identity": 2835,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "裸机虚拟化"
      }
    }
  },
  {
    "n": {
"identity": 2836,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "存储虚拟化"
      }
    }
  },
  {
    "n": {
"identity": 2837,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "网络虚拟化"
      }
    }
  },
  {
    "n": {
"identity": 2838,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "应用虚拟化"
      }
    }
  },
  {
    "n": {
"identity": 2839,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "虚拟化产品"
      }
    }
  },
  {
    "n": {
"identity": 2840,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Vmware"
      }
    }
  },
  {
    "n": {
"identity": 2841,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "KVM"
      }
    }
  },
  {
    "n": {
"identity": 2842,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "AWS亚马逊云服务"
      }
    }
  },
  {
    "n": {
"identity": 2843,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "阿里云服务"
      }
    }
  },
  {
    "n": {
"identity": 2844,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "阿里云ET城市"
      }
    }
  },
  {
    "n": {
"identity": 2845,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "阿里云ET环境"
      }
    }
  },
  {
    "n": {
"identity": 2846,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "Hadoop"
      }
    }
  },
  {
    "n": {
"identity": 2847,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "易用性"
      }
    }
  },
  {
    "n": {
"identity": 2848,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "高扩展性"
      }
    }
  },
  {
    "n": {
"identity": 2849,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "软件框架"
      }
    }
  },
  {
    "n": {
"identity": 2850,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Hadoop Common"
      }
    }
  },
  {
    "n": {
"identity": 2851,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "HDFS"
      }
    }
  },
  {
    "n": {
"identity": 2852,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "特点"
      }
    }
  },
  {
    "n": {
"identity": 2853,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "高容错性"
      }
    }
  },
  {
    "n": {
"identity": 2854,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "适合批处理"
      }
    }
  },
  {
    "n": {
"identity": 2855,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "适合大数据处理"
      }
    }
  },
  {
    "n": {
"identity": 2856,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "流式文件访问"
      }
    }
  },
  {
    "n": {
"identity": 2857,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "廉价"
      }
    }
  },
  {
    "n": {
"identity": 2858,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "小文件存取低效"
      }
    }
  },
  {
    "n": {
"identity": 2859,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "不支持文件随机修改"
      }
    }
  },
  {
    "n": {
"identity": 2860,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "不支持并发写入"
      }
    }
  },
  {
    "n": {
"identity": 2861,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "概念"
      }
    }
  },
  {
    "n": {
"identity": 2862,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "数据块"
      }
    }
  },
  {
    "n": {
"identity": 2863,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "NameNode"
      }
    }
  },
  {
    "n": {
"identity": 2864,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "DataNode"
      }
    }
  },
  {
    "n": {
"identity": 2865,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "读取过程"
      }
    }
  },
  {
    "n": {
"identity": 2866,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "写入过程"
      }
    }
  },
  {
    "n": {
"identity": 2867,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Hadoop YARN"
      }
    }
  },
  {
    "n": {
"identity": 2868,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "扩展性好"
      }
    }
  },
  {
    "n": {
"identity": 2869,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "集群使用效率高"
      }
    }
  },
  {
    "n": {
"identity": 2870,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "负载类型多"
      }
    }
  },
  {
    "n": {
"identity": 2871,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "灵活性好"
      }
    }
  },
  {
    "n": {
"identity": 2872,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "资源调度"
      }
    }
  },
  {
    "n": {
"identity": 2873,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "FIFO调度器"
      }
    }
  },
  {
    "n": {
"identity": 2874,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Capacity调度器"
      }
    }
  },
  {
    "n": {
"identity": 2875,
"labels": [
        "level_6_kP"
      ],
"properties": {
"name": "Fair调度器"
      }
    }
  },
  {
    "n": {
"identity": 2876,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Hadoop MapReduce计算模型"
      }
    }
  },
  {
    "n": {
"identity": 2877,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "MapReduce作业调度"
      }
    }
  },
  {
    "n": {
"identity": 2878,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Map阶段"
      }
    }
  },
  {
    "n": {
"identity": 2879,
"labels": [
        "level_5_kP"
      ],
"properties": {
"name": "Reduce阶段"
      }
    }
  },
  {
    "n": {
"identity": 2880,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "生态系统"
      }
    }
  },
  {
    "n": {
"identity": 2881,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Hive"
      }
    }
  },
  {
    "n": {
"identity": 2882,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "Mahout机器学习库"
      }
    }
  },
  {
    "n": {
"identity": 2883,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "Spark"
      }
    }
  },
  {
    "n": {
"identity": 2884,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "处理速度快"
      }
    }
  },
  {
    "n": {
"identity": 2885,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "易于使用"
      }
    }
  },
  {
    "n": {
"identity": 2886,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "弹性分布数据集(RDD)"
      }
    }
  },
  {
    "n": {
"identity": 2887,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "转换"
      }
    }
  },
  {
    "n": {
"identity": 2888,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "动作"
      }
    }
  },
  {
    "n": {
"identity": 2889,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "窄依赖"
      }
    }
  },
  {
    "n": {
"identity": 2890,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "宽依赖"
      }
    }
  },
  {
    "n": {
"identity": 2891,
"labels": [
        "level_4_kP"
      ],
"properties": {
"name": "DAG调度"
      }
    }
  },
  {
    "n": {
"identity": 2892,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "流数据处理模块(Spark Streaming)"
      }
    }
  },
  {
    "n": {
"identity": 2893,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Spark SQL"
      }
    }
  },
  {
    "n": {
"identity": 2894,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Spark GraphX"
      }
    }
  },
  {
    "n": {
"identity": 2895,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Spark MLLib"
      }
    }
  },
  {
    "n": {
"identity": 2896,
"labels": [
        "level_1_kP"
      ],
"properties": {
"name": "大规模数据"
      }
    }
  },
  {
    "n": {
"identity": 2897,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "数据来源"
      }
    }
  },
  {
    "n": {
"identity": 2898,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "互联网"
      }
    }
  },
  {
    "n": {
"identity": 2899,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "金融"
      }
    }
  },
  {
    "n": {
"identity": 2900,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "运营商"
      }
    }
  },
  {
    "n": {
"identity": 2901,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "移动互联网"
      }
    }
  },
  {
    "n": {
"identity": 2902,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "物联网"
      }
    }
  },
  {
    "n": {
"identity": 2903,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "车联网"
      }
    }
  },
  {
    "n": {
"identity": 2904,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "GPS"
      }
    }
  },
  {
    "n": {
"identity": 2905,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "医学影像"
      }
    }
  },
  {
    "n": {
"identity": 2906,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "安全监控"
      }
    }
  },
  {
    "n": {
"identity": 2907,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "问题"
      }
    }
  },
  {
    "n": {
"identity": 2908,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "数据处理困难"
      }
    }
  },
  {
    "n": {
"identity": 2909,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "建模困难"
      }
    }
  },
  {
    "n": {
"identity": 2910,
"labels": [
        "level_2_kP"
      ],
"properties": {
"name": "解决方案"
      }
    }
  },
  {
    "n": {
"identity": 2911,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Hadoop"
      }
    }
  },
  {
    "n": {
"identity": 2912,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "Spark"
      }
    }
  },
  {
    "n": {
"identity": 2913,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "流计算"
      }
    }
  },
  {
    "n": {
"identity": 2914,
"labels": [
        "level_7_kP"
      ],
"properties": {
"name": "七级知识点"
      }
    }
  },
  {
    "n": {
"identity": 2915,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "前置知识点"
      }
    }
  },
  {
    "n": {
"identity": 2916,
"labels": [
        "level_3_kP"
      ],
"properties": {
"name": "深度信念网络"
      }
    }
  }
]